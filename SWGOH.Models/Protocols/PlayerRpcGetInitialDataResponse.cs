// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PlayerRpcGetInitialDataResponse.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SWGOH.Models.Protocols {

  /// <summary>Holder for reflection information generated from PlayerRpcGetInitialDataResponse.proto</summary>
  public static partial class PlayerRpcGetInitialDataResponseReflection {

    #region Descriptor
    /// <summary>File descriptor for PlayerRpcGetInitialDataResponse.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerRpcGetInitialDataResponseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVQbGF5ZXJScGNHZXRJbml0aWFsRGF0YVJlc3BvbnNlLnByb3RvEhZTV0dP",
            "SC5Nb2RlbHMuUHJvdG9jb2xzIqcFCh9QbGF5ZXJScGNHZXRJbml0aWFsRGF0",
            "YVJlc3BvbnNlEhMKCXBsYXllcl9pZBgBIAEoCToAEkIKEXBsYXllcl9iYXNp",
            "Y19pbmZvGAIgASgLMicuU1dHT0guTW9kZWxzLlByb3RvY29scy5QbGF5ZXJC",
            "YXNpY0luZm8SSAoUcGxheWVyX2FkdmFuY2VkX2luZm8YBSABKAsyKi5TV0dP",
            "SC5Nb2RlbHMuUHJvdG9jb2xzLlBsYXllckFkdmFuY2VkSW5mbxIsCgVldmVu",
            "dBgNIAMoCzIdLlNXR09ILk1vZGVscy5Qcm90b2NvbHMuRXZlbnQSMAoHbWVz",
            "c2FnZRgPIAMoCzIfLlNXR09ILk1vZGVscy5Qcm90b2NvbHMuTWVzc2FnZRIu",
            "CgZkaWFsb2cYESADKAsyHi5TV0dPSC5Nb2RlbHMuUHJvdG9jb2xzLkRpYWxv",
            "ZxI3CgtidW5kbGVfcGFjaxgSIAEoCzIiLlNXR09ILk1vZGVscy5Qcm90b2Nv",
            "bHMuQnVuZGxlUGFjaxIzCgltaXNjX3BhY2sYEyABKAsyIC5TV0dPSC5Nb2Rl",
            "bHMuUHJvdG9jb2xzLk1pc2NQYWNrEjcKC2RhaWx5X2xvZ2luGBQgAygLMiIu",
            "U1dHT0guTW9kZWxzLlByb3RvY29scy5EYWlseUxvZ2luEjkKDHBsYXllcl9z",
            "dGF0cxgVIAMoCzIjLlNXR09ILk1vZGVscy5Qcm90b2NvbHMuUGxheWVyU3Rh",
            "dHMSEQoJdGltZXN0YW1wGBYgASgDEi4KBmZyaWVuZBgbIAEoCzIeLlNXR09I",
            "Lk1vZGVscy5Qcm90b2NvbHMuRnJpZW5kEiwKBWd1aWxkGCggASgLMh0uU1dH",
            "T0guTW9kZWxzLlByb3RvY29scy5HdWlsZCKBAQoPUGxheWVyQmFzaWNJbmZv",
            "Eg0KBWxldmVsGAMgASgDEi4KBmVuZXJneRgEIAMoCzIeLlNXR09ILk1vZGVs",
            "cy5Qcm90b2NvbHMuRW5lcmd5EgwKBG5hbWUYByABKAkSEQoJYWxseV9jb2Rl",
            "GBMgASgJEg4KBnJlZ2lvbhgjIAEoCSJHCgZFbmVyZ3kSCgoCaWQYASABKAMS",
            "EQoJdGltZXN0YW1wGAIgASgDEgsKA21heBgDIAEoAxIRCglwdXJjaGFzZWQY",
            "BCABKAMi0QIKElBsYXllckFkdmFuY2VkSW5mbxIrCgV1bml0cxgBIAMoCzIc",
            "LlNXR09ILk1vZGVscy5Qcm90b2NvbHMuVW5pdBI2CgtjaGFyX3NxdWFkcxgC",
            "IAMoCzIhLlNXR09ILk1vZGVscy5Qcm90b2NvbHMuQ2hhclNxdWFkEjgKDGZs",
            "ZWV0X3NxdWFkcxgDIAMoCzIiLlNXR09ILk1vZGVscy5Qcm90b2NvbHMuRmxl",
            "ZXRTcXVhZBIzCgltYXRlcmlhbHMYBSADKAsyIC5TV0dPSC5Nb2RlbHMuUHJv",
            "dG9jb2xzLk1hdGVyaWFsEiwKBXN0dWZmGAkgAygLMh0uU1dHT0guTW9kZWxz",
            "LlByb3RvY29scy5TdHVmZhI5CgxnZWFyX3NhbHZhZ2UYCiADKAsyIy5TV0dP",
            "SC5Nb2RlbHMuUHJvdG9jb2xzLkdlYXJTYWx2YWdlIr4BCgRVbml0EgwKAmlk",
            "GAEgASgJOgASDgoEbmFtZRgCIAEoCToAEhEKBnJhcml0eRgIIAEoAzoBMBIQ",
            "CgVsZXZlbBgJIAEoAzoBMBIsCgVza2lsbBgQIAMoCzIdLlNXR09ILk1vZGVs",
            "cy5Qcm90b2NvbHMuU2tpbGwSDwoEZ2VhchgTIAEoAzoBMBI0CgllcXVpcG1l",
            "bnQYFSADKAsyIS5TV0dPSC5Nb2RlbHMuUHJvdG9jb2xzLkVxdWlwbWVudCIL",
            "CglDaGFyU3F1YWQiDAoKRmxlZXRTcXVhZCIpCghNYXRlcmlhbBIMCgRuYW1l",
            "GAEgASgJEg8KB3F1YXRpdHkYAiABKAMiSQoFU3R1ZmYSLwoEdHlwZRgBIAEo",
            "DjIhLlNXR09ILk1vZGVscy5Qcm90b2NvbHMuU3R1ZmZUeXBlEg8KB3F1YXRp",
            "dHkYAiABKAMiDQoLR2VhclNhbHZhZ2UiKQoFU2tpbGwSDgoEbmFtZRgBIAEo",
            "CToAEhAKBWxldmVsGAIgASgDOgEwIiUKCUVxdWlwbWVudBIKCgJpZBgBIAEo",
            "CRIMCgRjb2RlGAIgASgJIvcCCgVFdmVudBITCglidW5kbGVfaWQYASABKAk6",
            "ABIRCgZzZWFzb24YAiABKAU6ATASDgoEbmFtZRgDIAEoCToAEhEKB3N1bW1h",
            "cnkYBCABKAk6ABIVCgtkZXNjcmlwdGlvbhgFIAEoCToAEg4KBGljb24YBiAB",
            "KAk6ABIWCgtwcmV2aWV3X2tleRgHIAEoBToBMBIvCgR0aW1lGAogASgLMiEu",
            "U1dHT0guTW9kZWxzLlByb3RvY29scy5FdmVudFRpbWUSFAoMc2hpcG1lbnRf",
            "a2V5GA8gASgJEhIKCmV2ZW50X2ljb24YEiABKAkSFgoMZGVzY3JpcHRpb24y",
            "GBkgASgJOgASDQoFbGltaXQYICABKAkSFQoNZ2NfZXZlbnRfaWNvbhgjIAEo",
            "CRJLCg5nY19teXN0ZXJ5X2JveBgmIAMoCzIzLlNXR09ILk1vZGVscy5Qcm90",
            "b2NvbHMuR2FsYWN0aWNDaGFsbGVuZ2VNeXN0ZXJ5Qm94IpwBCglFdmVudFRp",
            "bWUSDAoCaWQYASABKAk6ABIVCgpzdGFydF90aW1lGAIgASgDOgEwEhMKCGVu",
            "ZF90aW1lGAMgASgDOgEwEhYKC3NlbGVjdF90aW1lGAQgASgDOgEwEhQKCWVu",
            "ZF90aW1lMhgFIAEoAzoBMBIRCgZzdGF0dXMYBiABKAU6ATASFAoJZW5kX3Rp",
            "bWUzGBAgASgDOgEwIuABChtHYWxhY3RpY0NoYWxsZW5nZU15c3RlcnlCb3gS",
            "EgoKbWluX3BvaW50cxgBIAEoAxISCgptYXhfcG9pbnRzGAIgASgDEkkKBnJl",
            "d2FyZBgDIAEoCzI5LlNXR09ILk1vZGVscy5Qcm90b2NvbHMuR2FsYWN0aWND",
            "aGFsbGVuZ2VNeXN0ZXJ5Qm94UmV3YXJkEk4KC25leHRfcmV3YXJkGAQgASgL",
            "MjkuU1dHT0guTW9kZWxzLlByb3RvY29scy5HYWxhY3RpY0NoYWxsZW5nZU15",
            "c3RlcnlCb3hSZXdhcmQiSgohR2FsYWN0aWNDaGFsbGVuZ2VNeXN0ZXJ5Qm94",
            "UmV3YXJkEgwKBG5hbWUYASABKAkSFwoPcmVxdWlyZWRfcG9pbnRzGAIgASgD",
            "IqoBCgdNZXNzYWdlEhMKCWJ1bmRsZV9pZBgBIAEoCToAEhEKBnNlYXNvbhgC",
            "IAEoBToBMBITCgl0aXRsZV9rZXkYAyABKAk6ABIZCg9kZXNjcmlwdGlvbl9r",
            "ZXkYBCABKAk6ABIOCgRpY29uGAUgASgJOgASEQoHY2hhbm5lbBgGIAEoCToA",
            "EhIKCnN0YXJ0X3RpbWUYByABKAMSEAoIZW5kX3RpbWUYCCABKAMiCAoGRGlh",
            "bG9nIgwKCkJ1bmRsZVBhY2siPgoITWlzY1BhY2sSMgoEaXRlbRgBIAMoCzIk",
            "LlNXR09ILk1vZGVscy5Qcm90b2NvbHMuTWlzY1BhY2tJdGVtIi0KDE1pc2NQ",
            "YWNrSXRlbRIMCgRuYW1lGAEgASgJEg8KB3F1YXRpdHkYAiABKAMiDAoKRGFp",
            "bHlMb2dpbiIrCgtQbGF5ZXJTdGF0cxINCgV0aXRsZRgBIAEoCRINCgVjb3Vu",
            "dBgCIAEoAyIICgZGcmllbmQiPgoFR3VpbGQSNQoHcHJvZmlsZRgBIAEoCzIk",
            "LlNXR09ILk1vZGVscy5Qcm90b2NvbHMuR3VpbGRQcm9maWxlIm0KDEd1aWxk",
            "UHJvZmlsZRIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEhMKC2Rlc2NyaXB0",
            "aW9uGAMgASgJEhIKCm1lbWJlcl9jYXAYCSABKAMSDgoGbWVtYmVyGAogASgD",
            "EgoKAmdwGBMgASgDKrMCCglTdHVmZlR5cGUSCwoHQ3JlZGl0cxABEgwKCENy",
            "eXN0YWxzEAISDgoKQWxseVBvaW50cxAEEhQKEFNxdWFkQXJlbmFUb2tlbnMQ",
            "ChIXChNDYW50aW5hQmF0dGxlVG9rZW5zEAsSFAoQRmxlZXRBcmVuYVRva2Vu",
            "cxAMEhUKEUdhbGFjdGljV2FyVG9rZW5zEA4SFAoQU2hhcmRTdG9yZVRva2Vu",
            "cxAQEg8KC0d1aWxkVG9rZW5zEBESGQoVU2hpcEJ1aWxkaW5nTWF0ZXJpYWxz",
            "EBMSFwoTTUsxR3VpbGRFdmVudFRva2VucxAgEhYKEkNoYW1waW9uc2hpcFRv",
            "a2VucxAhEhcKE01LMkd1aWxkRXZlbnRUb2tlbnMQIhITCg9Db25xdWVzdENy",
            "ZWRpdHMQJw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::SWGOH.Models.Protocols.StuffType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponse), global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponse.Parser, new[]{ "PlayerId", "PlayerBasicInfo", "PlayerAdvancedInfo", "Event", "Message", "Dialog", "BundlePack", "MiscPack", "DailyLogin", "PlayerStats", "Timestamp", "Friend", "Guild" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.PlayerBasicInfo), global::SWGOH.Models.Protocols.PlayerBasicInfo.Parser, new[]{ "Level", "Energy", "Name", "AllyCode", "Region" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.Energy), global::SWGOH.Models.Protocols.Energy.Parser, new[]{ "Id", "Timestamp", "Max", "Purchased" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.PlayerAdvancedInfo), global::SWGOH.Models.Protocols.PlayerAdvancedInfo.Parser, new[]{ "Units", "CharSquads", "FleetSquads", "Materials", "Stuff", "GearSalvage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.Unit), global::SWGOH.Models.Protocols.Unit.Parser, new[]{ "Id", "Name", "Rarity", "Level", "Skill", "Gear", "Equipment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.CharSquad), global::SWGOH.Models.Protocols.CharSquad.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.FleetSquad), global::SWGOH.Models.Protocols.FleetSquad.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.Material), global::SWGOH.Models.Protocols.Material.Parser, new[]{ "Name", "Quatity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.Stuff), global::SWGOH.Models.Protocols.Stuff.Parser, new[]{ "Type", "Quatity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.GearSalvage), global::SWGOH.Models.Protocols.GearSalvage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.Skill), global::SWGOH.Models.Protocols.Skill.Parser, new[]{ "Name", "Level" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.Equipment), global::SWGOH.Models.Protocols.Equipment.Parser, new[]{ "Id", "Code" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.Event), global::SWGOH.Models.Protocols.Event.Parser, new[]{ "BundleId", "Season", "Name", "Summary", "Description", "Icon", "PreviewKey", "Time", "ShipmentKey", "EventIcon", "Description2", "Limit", "GcEventIcon", "GcMysteryBox" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.EventTime), global::SWGOH.Models.Protocols.EventTime.Parser, new[]{ "Id", "StartTime", "EndTime", "SelectTime", "EndTime2", "Status", "EndTime3" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.GalacticChallengeMysteryBox), global::SWGOH.Models.Protocols.GalacticChallengeMysteryBox.Parser, new[]{ "MinPoints", "MaxPoints", "Reward", "NextReward" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.GalacticChallengeMysteryBoxReward), global::SWGOH.Models.Protocols.GalacticChallengeMysteryBoxReward.Parser, new[]{ "Name", "RequiredPoints" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.Message), global::SWGOH.Models.Protocols.Message.Parser, new[]{ "BundleId", "Season", "TitleKey", "DescriptionKey", "Icon", "Channel", "StartTime", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.Dialog), global::SWGOH.Models.Protocols.Dialog.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.BundlePack), global::SWGOH.Models.Protocols.BundlePack.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.MiscPack), global::SWGOH.Models.Protocols.MiscPack.Parser, new[]{ "Item" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.MiscPackItem), global::SWGOH.Models.Protocols.MiscPackItem.Parser, new[]{ "Name", "Quatity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.DailyLogin), global::SWGOH.Models.Protocols.DailyLogin.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.PlayerStats), global::SWGOH.Models.Protocols.PlayerStats.Parser, new[]{ "Title", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.Friend), global::SWGOH.Models.Protocols.Friend.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.Guild), global::SWGOH.Models.Protocols.Guild.Parser, new[]{ "Profile" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.GuildProfile), global::SWGOH.Models.Protocols.GuildProfile.Parser, new[]{ "Id", "Name", "Description", "MemberCap", "Member", "Gp" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum StuffType {
    [pbr::OriginalName("Credits")] Credits = 1,
    [pbr::OriginalName("Crystals")] Crystals = 2,
    [pbr::OriginalName("AllyPoints")] AllyPoints = 4,
    [pbr::OriginalName("SquadArenaTokens")] SquadArenaTokens = 10,
    [pbr::OriginalName("CantinaBattleTokens")] CantinaBattleTokens = 11,
    [pbr::OriginalName("FleetArenaTokens")] FleetArenaTokens = 12,
    [pbr::OriginalName("GalacticWarTokens")] GalacticWarTokens = 14,
    [pbr::OriginalName("ShardStoreTokens")] ShardStoreTokens = 16,
    [pbr::OriginalName("GuildTokens")] GuildTokens = 17,
    [pbr::OriginalName("ShipBuildingMaterials")] ShipBuildingMaterials = 19,
    [pbr::OriginalName("MK1GuildEventTokens")] Mk1GuildEventTokens = 32,
    [pbr::OriginalName("ChampionshipTokens")] ChampionshipTokens = 33,
    [pbr::OriginalName("MK2GuildEventTokens")] Mk2GuildEventTokens = 34,
    [pbr::OriginalName("ConquestCredits")] ConquestCredits = 39,
  }

  #endregion

  #region Messages
  public sealed partial class PlayerRpcGetInitialDataResponse : pb::IMessage<PlayerRpcGetInitialDataResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerRpcGetInitialDataResponse> _parser = new pb::MessageParser<PlayerRpcGetInitialDataResponse>(() => new PlayerRpcGetInitialDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerRpcGetInitialDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerRpcGetInitialDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerRpcGetInitialDataResponse(PlayerRpcGetInitialDataResponse other) : this() {
      _hasBits0 = other._hasBits0;
      playerId_ = other.playerId_;
      playerBasicInfo_ = other.playerBasicInfo_ != null ? other.playerBasicInfo_.Clone() : null;
      playerAdvancedInfo_ = other.playerAdvancedInfo_ != null ? other.playerAdvancedInfo_.Clone() : null;
      event_ = other.event_.Clone();
      message_ = other.message_.Clone();
      dialog_ = other.dialog_.Clone();
      bundlePack_ = other.bundlePack_ != null ? other.bundlePack_.Clone() : null;
      miscPack_ = other.miscPack_ != null ? other.miscPack_.Clone() : null;
      dailyLogin_ = other.dailyLogin_.Clone();
      playerStats_ = other.playerStats_.Clone();
      timestamp_ = other.timestamp_;
      friend_ = other.friend_ != null ? other.friend_.Clone() : null;
      guild_ = other.guild_ != null ? other.guild_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerRpcGetInitialDataResponse Clone() {
      return new PlayerRpcGetInitialDataResponse(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private readonly static string PlayerIdDefaultValue = "";

    private string playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_ ?? PlayerIdDefaultValue; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "player_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPlayerId {
      get { return playerId_ != null; }
    }
    /// <summary>Clears the value of the "player_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPlayerId() {
      playerId_ = null;
    }

    /// <summary>Field number for the "player_basic_info" field.</summary>
    public const int PlayerBasicInfoFieldNumber = 2;
    private global::SWGOH.Models.Protocols.PlayerBasicInfo playerBasicInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SWGOH.Models.Protocols.PlayerBasicInfo PlayerBasicInfo {
      get { return playerBasicInfo_; }
      set {
        playerBasicInfo_ = value;
      }
    }

    /// <summary>Field number for the "player_advanced_info" field.</summary>
    public const int PlayerAdvancedInfoFieldNumber = 5;
    private global::SWGOH.Models.Protocols.PlayerAdvancedInfo playerAdvancedInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SWGOH.Models.Protocols.PlayerAdvancedInfo PlayerAdvancedInfo {
      get { return playerAdvancedInfo_; }
      set {
        playerAdvancedInfo_ = value;
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 13;
    private static readonly pb::FieldCodec<global::SWGOH.Models.Protocols.Event> _repeated_event_codec
        = pb::FieldCodec.ForMessage(106, global::SWGOH.Models.Protocols.Event.Parser);
    private readonly pbc::RepeatedField<global::SWGOH.Models.Protocols.Event> event_ = new pbc::RepeatedField<global::SWGOH.Models.Protocols.Event>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SWGOH.Models.Protocols.Event> Event {
      get { return event_; }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 15;
    private static readonly pb::FieldCodec<global::SWGOH.Models.Protocols.Message> _repeated_message_codec
        = pb::FieldCodec.ForMessage(122, global::SWGOH.Models.Protocols.Message.Parser);
    private readonly pbc::RepeatedField<global::SWGOH.Models.Protocols.Message> message_ = new pbc::RepeatedField<global::SWGOH.Models.Protocols.Message>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SWGOH.Models.Protocols.Message> Message {
      get { return message_; }
    }

    /// <summary>Field number for the "dialog" field.</summary>
    public const int DialogFieldNumber = 17;
    private static readonly pb::FieldCodec<global::SWGOH.Models.Protocols.Dialog> _repeated_dialog_codec
        = pb::FieldCodec.ForMessage(138, global::SWGOH.Models.Protocols.Dialog.Parser);
    private readonly pbc::RepeatedField<global::SWGOH.Models.Protocols.Dialog> dialog_ = new pbc::RepeatedField<global::SWGOH.Models.Protocols.Dialog>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SWGOH.Models.Protocols.Dialog> Dialog {
      get { return dialog_; }
    }

    /// <summary>Field number for the "bundle_pack" field.</summary>
    public const int BundlePackFieldNumber = 18;
    private global::SWGOH.Models.Protocols.BundlePack bundlePack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SWGOH.Models.Protocols.BundlePack BundlePack {
      get { return bundlePack_; }
      set {
        bundlePack_ = value;
      }
    }

    /// <summary>Field number for the "misc_pack" field.</summary>
    public const int MiscPackFieldNumber = 19;
    private global::SWGOH.Models.Protocols.MiscPack miscPack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SWGOH.Models.Protocols.MiscPack MiscPack {
      get { return miscPack_; }
      set {
        miscPack_ = value;
      }
    }

    /// <summary>Field number for the "daily_login" field.</summary>
    public const int DailyLoginFieldNumber = 20;
    private static readonly pb::FieldCodec<global::SWGOH.Models.Protocols.DailyLogin> _repeated_dailyLogin_codec
        = pb::FieldCodec.ForMessage(162, global::SWGOH.Models.Protocols.DailyLogin.Parser);
    private readonly pbc::RepeatedField<global::SWGOH.Models.Protocols.DailyLogin> dailyLogin_ = new pbc::RepeatedField<global::SWGOH.Models.Protocols.DailyLogin>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SWGOH.Models.Protocols.DailyLogin> DailyLogin {
      get { return dailyLogin_; }
    }

    /// <summary>Field number for the "player_stats" field.</summary>
    public const int PlayerStatsFieldNumber = 21;
    private static readonly pb::FieldCodec<global::SWGOH.Models.Protocols.PlayerStats> _repeated_playerStats_codec
        = pb::FieldCodec.ForMessage(170, global::SWGOH.Models.Protocols.PlayerStats.Parser);
    private readonly pbc::RepeatedField<global::SWGOH.Models.Protocols.PlayerStats> playerStats_ = new pbc::RepeatedField<global::SWGOH.Models.Protocols.PlayerStats>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SWGOH.Models.Protocols.PlayerStats> PlayerStats {
      get { return playerStats_; }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 22;
    private readonly static long TimestampDefaultValue = 0L;

    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { if ((_hasBits0 & 1) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimestamp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimestamp() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "friend" field.</summary>
    public const int FriendFieldNumber = 27;
    private global::SWGOH.Models.Protocols.Friend friend_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SWGOH.Models.Protocols.Friend Friend {
      get { return friend_; }
      set {
        friend_ = value;
      }
    }

    /// <summary>Field number for the "guild" field.</summary>
    public const int GuildFieldNumber = 40;
    private global::SWGOH.Models.Protocols.Guild guild_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SWGOH.Models.Protocols.Guild Guild {
      get { return guild_; }
      set {
        guild_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerRpcGetInitialDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerRpcGetInitialDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (!object.Equals(PlayerBasicInfo, other.PlayerBasicInfo)) return false;
      if (!object.Equals(PlayerAdvancedInfo, other.PlayerAdvancedInfo)) return false;
      if(!event_.Equals(other.event_)) return false;
      if(!message_.Equals(other.message_)) return false;
      if(!dialog_.Equals(other.dialog_)) return false;
      if (!object.Equals(BundlePack, other.BundlePack)) return false;
      if (!object.Equals(MiscPack, other.MiscPack)) return false;
      if(!dailyLogin_.Equals(other.dailyLogin_)) return false;
      if(!playerStats_.Equals(other.playerStats_)) return false;
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(Friend, other.Friend)) return false;
      if (!object.Equals(Guild, other.Guild)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPlayerId) hash ^= PlayerId.GetHashCode();
      if (playerBasicInfo_ != null) hash ^= PlayerBasicInfo.GetHashCode();
      if (playerAdvancedInfo_ != null) hash ^= PlayerAdvancedInfo.GetHashCode();
      hash ^= event_.GetHashCode();
      hash ^= message_.GetHashCode();
      hash ^= dialog_.GetHashCode();
      if (bundlePack_ != null) hash ^= BundlePack.GetHashCode();
      if (miscPack_ != null) hash ^= MiscPack.GetHashCode();
      hash ^= dailyLogin_.GetHashCode();
      hash ^= playerStats_.GetHashCode();
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (friend_ != null) hash ^= Friend.GetHashCode();
      if (guild_ != null) hash ^= Guild.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPlayerId) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (playerBasicInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerBasicInfo);
      }
      if (playerAdvancedInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayerAdvancedInfo);
      }
      event_.WriteTo(output, _repeated_event_codec);
      message_.WriteTo(output, _repeated_message_codec);
      dialog_.WriteTo(output, _repeated_dialog_codec);
      if (bundlePack_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(BundlePack);
      }
      if (miscPack_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(MiscPack);
      }
      dailyLogin_.WriteTo(output, _repeated_dailyLogin_codec);
      playerStats_.WriteTo(output, _repeated_playerStats_codec);
      if (HasTimestamp) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(Timestamp);
      }
      if (friend_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(Friend);
      }
      if (guild_ != null) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(Guild);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPlayerId) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (playerBasicInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerBasicInfo);
      }
      if (playerAdvancedInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayerAdvancedInfo);
      }
      event_.WriteTo(ref output, _repeated_event_codec);
      message_.WriteTo(ref output, _repeated_message_codec);
      dialog_.WriteTo(ref output, _repeated_dialog_codec);
      if (bundlePack_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(BundlePack);
      }
      if (miscPack_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(MiscPack);
      }
      dailyLogin_.WriteTo(ref output, _repeated_dailyLogin_codec);
      playerStats_.WriteTo(ref output, _repeated_playerStats_codec);
      if (HasTimestamp) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(Timestamp);
      }
      if (friend_ != null) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(Friend);
      }
      if (guild_ != null) {
        output.WriteRawTag(194, 2);
        output.WriteMessage(Guild);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasPlayerId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (playerBasicInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerBasicInfo);
      }
      if (playerAdvancedInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerAdvancedInfo);
      }
      size += event_.CalculateSize(_repeated_event_codec);
      size += message_.CalculateSize(_repeated_message_codec);
      size += dialog_.CalculateSize(_repeated_dialog_codec);
      if (bundlePack_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BundlePack);
      }
      if (miscPack_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(MiscPack);
      }
      size += dailyLogin_.CalculateSize(_repeated_dailyLogin_codec);
      size += playerStats_.CalculateSize(_repeated_playerStats_codec);
      if (HasTimestamp) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (friend_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Friend);
      }
      if (guild_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Guild);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerRpcGetInitialDataResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasPlayerId) {
        PlayerId = other.PlayerId;
      }
      if (other.playerBasicInfo_ != null) {
        if (playerBasicInfo_ == null) {
          PlayerBasicInfo = new global::SWGOH.Models.Protocols.PlayerBasicInfo();
        }
        PlayerBasicInfo.MergeFrom(other.PlayerBasicInfo);
      }
      if (other.playerAdvancedInfo_ != null) {
        if (playerAdvancedInfo_ == null) {
          PlayerAdvancedInfo = new global::SWGOH.Models.Protocols.PlayerAdvancedInfo();
        }
        PlayerAdvancedInfo.MergeFrom(other.PlayerAdvancedInfo);
      }
      event_.Add(other.event_);
      message_.Add(other.message_);
      dialog_.Add(other.dialog_);
      if (other.bundlePack_ != null) {
        if (bundlePack_ == null) {
          BundlePack = new global::SWGOH.Models.Protocols.BundlePack();
        }
        BundlePack.MergeFrom(other.BundlePack);
      }
      if (other.miscPack_ != null) {
        if (miscPack_ == null) {
          MiscPack = new global::SWGOH.Models.Protocols.MiscPack();
        }
        MiscPack.MergeFrom(other.MiscPack);
      }
      dailyLogin_.Add(other.dailyLogin_);
      playerStats_.Add(other.playerStats_);
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      if (other.friend_ != null) {
        if (friend_ == null) {
          Friend = new global::SWGOH.Models.Protocols.Friend();
        }
        Friend.MergeFrom(other.Friend);
      }
      if (other.guild_ != null) {
        if (guild_ == null) {
          Guild = new global::SWGOH.Models.Protocols.Guild();
        }
        Guild.MergeFrom(other.Guild);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            if (playerBasicInfo_ == null) {
              PlayerBasicInfo = new global::SWGOH.Models.Protocols.PlayerBasicInfo();
            }
            input.ReadMessage(PlayerBasicInfo);
            break;
          }
          case 42: {
            if (playerAdvancedInfo_ == null) {
              PlayerAdvancedInfo = new global::SWGOH.Models.Protocols.PlayerAdvancedInfo();
            }
            input.ReadMessage(PlayerAdvancedInfo);
            break;
          }
          case 106: {
            event_.AddEntriesFrom(input, _repeated_event_codec);
            break;
          }
          case 122: {
            message_.AddEntriesFrom(input, _repeated_message_codec);
            break;
          }
          case 138: {
            dialog_.AddEntriesFrom(input, _repeated_dialog_codec);
            break;
          }
          case 146: {
            if (bundlePack_ == null) {
              BundlePack = new global::SWGOH.Models.Protocols.BundlePack();
            }
            input.ReadMessage(BundlePack);
            break;
          }
          case 154: {
            if (miscPack_ == null) {
              MiscPack = new global::SWGOH.Models.Protocols.MiscPack();
            }
            input.ReadMessage(MiscPack);
            break;
          }
          case 162: {
            dailyLogin_.AddEntriesFrom(input, _repeated_dailyLogin_codec);
            break;
          }
          case 170: {
            playerStats_.AddEntriesFrom(input, _repeated_playerStats_codec);
            break;
          }
          case 176: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 218: {
            if (friend_ == null) {
              Friend = new global::SWGOH.Models.Protocols.Friend();
            }
            input.ReadMessage(Friend);
            break;
          }
          case 322: {
            if (guild_ == null) {
              Guild = new global::SWGOH.Models.Protocols.Guild();
            }
            input.ReadMessage(Guild);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            if (playerBasicInfo_ == null) {
              PlayerBasicInfo = new global::SWGOH.Models.Protocols.PlayerBasicInfo();
            }
            input.ReadMessage(PlayerBasicInfo);
            break;
          }
          case 42: {
            if (playerAdvancedInfo_ == null) {
              PlayerAdvancedInfo = new global::SWGOH.Models.Protocols.PlayerAdvancedInfo();
            }
            input.ReadMessage(PlayerAdvancedInfo);
            break;
          }
          case 106: {
            event_.AddEntriesFrom(ref input, _repeated_event_codec);
            break;
          }
          case 122: {
            message_.AddEntriesFrom(ref input, _repeated_message_codec);
            break;
          }
          case 138: {
            dialog_.AddEntriesFrom(ref input, _repeated_dialog_codec);
            break;
          }
          case 146: {
            if (bundlePack_ == null) {
              BundlePack = new global::SWGOH.Models.Protocols.BundlePack();
            }
            input.ReadMessage(BundlePack);
            break;
          }
          case 154: {
            if (miscPack_ == null) {
              MiscPack = new global::SWGOH.Models.Protocols.MiscPack();
            }
            input.ReadMessage(MiscPack);
            break;
          }
          case 162: {
            dailyLogin_.AddEntriesFrom(ref input, _repeated_dailyLogin_codec);
            break;
          }
          case 170: {
            playerStats_.AddEntriesFrom(ref input, _repeated_playerStats_codec);
            break;
          }
          case 176: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 218: {
            if (friend_ == null) {
              Friend = new global::SWGOH.Models.Protocols.Friend();
            }
            input.ReadMessage(Friend);
            break;
          }
          case 322: {
            if (guild_ == null) {
              Guild = new global::SWGOH.Models.Protocols.Guild();
            }
            input.ReadMessage(Guild);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerBasicInfo : pb::IMessage<PlayerBasicInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerBasicInfo> _parser = new pb::MessageParser<PlayerBasicInfo>(() => new PlayerBasicInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerBasicInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerBasicInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerBasicInfo(PlayerBasicInfo other) : this() {
      _hasBits0 = other._hasBits0;
      level_ = other.level_;
      energy_ = other.energy_.Clone();
      name_ = other.name_;
      allyCode_ = other.allyCode_;
      region_ = other.region_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerBasicInfo Clone() {
      return new PlayerBasicInfo(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private readonly static long LevelDefaultValue = 0L;

    private long level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Level {
      get { if ((_hasBits0 & 1) != 0) { return level_; } else { return LevelDefaultValue; } }
      set {
        _hasBits0 |= 1;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLevel {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLevel() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "energy" field.</summary>
    public const int EnergyFieldNumber = 4;
    private static readonly pb::FieldCodec<global::SWGOH.Models.Protocols.Energy> _repeated_energy_codec
        = pb::FieldCodec.ForMessage(34, global::SWGOH.Models.Protocols.Energy.Parser);
    private readonly pbc::RepeatedField<global::SWGOH.Models.Protocols.Energy> energy_ = new pbc::RepeatedField<global::SWGOH.Models.Protocols.Energy>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SWGOH.Models.Protocols.Energy> Energy {
      get { return energy_; }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "ally_code" field.</summary>
    public const int AllyCodeFieldNumber = 19;
    private readonly static string AllyCodeDefaultValue = "";

    private string allyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AllyCode {
      get { return allyCode_ ?? AllyCodeDefaultValue; }
      set {
        allyCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ally_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasAllyCode {
      get { return allyCode_ != null; }
    }
    /// <summary>Clears the value of the "ally_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAllyCode() {
      allyCode_ = null;
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 35;
    private readonly static string RegionDefaultValue = "";

    private string region_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Region {
      get { return region_ ?? RegionDefaultValue; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "region" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRegion {
      get { return region_ != null; }
    }
    /// <summary>Clears the value of the "region" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRegion() {
      region_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerBasicInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerBasicInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if(!energy_.Equals(other.energy_)) return false;
      if (Name != other.Name) return false;
      if (AllyCode != other.AllyCode) return false;
      if (Region != other.Region) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLevel) hash ^= Level.GetHashCode();
      hash ^= energy_.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasAllyCode) hash ^= AllyCode.GetHashCode();
      if (HasRegion) hash ^= Region.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLevel) {
        output.WriteRawTag(24);
        output.WriteInt64(Level);
      }
      energy_.WriteTo(output, _repeated_energy_codec);
      if (HasName) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (HasAllyCode) {
        output.WriteRawTag(154, 1);
        output.WriteString(AllyCode);
      }
      if (HasRegion) {
        output.WriteRawTag(154, 2);
        output.WriteString(Region);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLevel) {
        output.WriteRawTag(24);
        output.WriteInt64(Level);
      }
      energy_.WriteTo(ref output, _repeated_energy_codec);
      if (HasName) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (HasAllyCode) {
        output.WriteRawTag(154, 1);
        output.WriteString(AllyCode);
      }
      if (HasRegion) {
        output.WriteRawTag(154, 2);
        output.WriteString(Region);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Level);
      }
      size += energy_.CalculateSize(_repeated_energy_codec);
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasAllyCode) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AllyCode);
      }
      if (HasRegion) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerBasicInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      energy_.Add(other.energy_);
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasAllyCode) {
        AllyCode = other.AllyCode;
      }
      if (other.HasRegion) {
        Region = other.Region;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            Level = input.ReadInt64();
            break;
          }
          case 34: {
            energy_.AddEntriesFrom(input, _repeated_energy_codec);
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
          case 154: {
            AllyCode = input.ReadString();
            break;
          }
          case 282: {
            Region = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 24: {
            Level = input.ReadInt64();
            break;
          }
          case 34: {
            energy_.AddEntriesFrom(ref input, _repeated_energy_codec);
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
          case 154: {
            AllyCode = input.ReadString();
            break;
          }
          case 282: {
            Region = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Energy : pb::IMessage<Energy>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Energy> _parser = new pb::MessageParser<Energy>(() => new Energy());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Energy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Energy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Energy(Energy other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      timestamp_ = other.timestamp_;
      max_ = other.max_;
      purchased_ = other.purchased_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Energy Clone() {
      return new Energy(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static long IdDefaultValue = 0L;

    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private readonly static long TimestampDefaultValue = 0L;

    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { if ((_hasBits0 & 2) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 2;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimestamp {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimestamp() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 3;
    private readonly static long MaxDefaultValue = 0L;

    private long max_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Max {
      get { if ((_hasBits0 & 4) != 0) { return max_; } else { return MaxDefaultValue; } }
      set {
        _hasBits0 |= 4;
        max_ = value;
      }
    }
    /// <summary>Gets whether the "max" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMax {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "max" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMax() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "purchased" field.</summary>
    public const int PurchasedFieldNumber = 4;
    private readonly static long PurchasedDefaultValue = 0L;

    private long purchased_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Purchased {
      get { if ((_hasBits0 & 8) != 0) { return purchased_; } else { return PurchasedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        purchased_ = value;
      }
    }
    /// <summary>Gets whether the "purchased" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPurchased {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "purchased" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPurchased() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Energy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Energy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Max != other.Max) return false;
      if (Purchased != other.Purchased) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (HasMax) hash ^= Max.GetHashCode();
      if (HasPurchased) hash ^= Purchased.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (HasTimestamp) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      if (HasMax) {
        output.WriteRawTag(24);
        output.WriteInt64(Max);
      }
      if (HasPurchased) {
        output.WriteRawTag(32);
        output.WriteInt64(Purchased);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (HasTimestamp) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      if (HasMax) {
        output.WriteRawTag(24);
        output.WriteInt64(Max);
      }
      if (HasPurchased) {
        output.WriteRawTag(32);
        output.WriteInt64(Purchased);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (HasMax) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Max);
      }
      if (HasPurchased) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Purchased);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Energy other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      if (other.HasMax) {
        Max = other.Max;
      }
      if (other.HasPurchased) {
        Purchased = other.Purchased;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 24: {
            Max = input.ReadInt64();
            break;
          }
          case 32: {
            Purchased = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 24: {
            Max = input.ReadInt64();
            break;
          }
          case 32: {
            Purchased = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerAdvancedInfo : pb::IMessage<PlayerAdvancedInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerAdvancedInfo> _parser = new pb::MessageParser<PlayerAdvancedInfo>(() => new PlayerAdvancedInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerAdvancedInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerAdvancedInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerAdvancedInfo(PlayerAdvancedInfo other) : this() {
      units_ = other.units_.Clone();
      charSquads_ = other.charSquads_.Clone();
      fleetSquads_ = other.fleetSquads_.Clone();
      materials_ = other.materials_.Clone();
      stuff_ = other.stuff_.Clone();
      gearSalvage_ = other.gearSalvage_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerAdvancedInfo Clone() {
      return new PlayerAdvancedInfo(this);
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SWGOH.Models.Protocols.Unit> _repeated_units_codec
        = pb::FieldCodec.ForMessage(10, global::SWGOH.Models.Protocols.Unit.Parser);
    private readonly pbc::RepeatedField<global::SWGOH.Models.Protocols.Unit> units_ = new pbc::RepeatedField<global::SWGOH.Models.Protocols.Unit>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SWGOH.Models.Protocols.Unit> Units {
      get { return units_; }
    }

    /// <summary>Field number for the "char_squads" field.</summary>
    public const int CharSquadsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::SWGOH.Models.Protocols.CharSquad> _repeated_charSquads_codec
        = pb::FieldCodec.ForMessage(18, global::SWGOH.Models.Protocols.CharSquad.Parser);
    private readonly pbc::RepeatedField<global::SWGOH.Models.Protocols.CharSquad> charSquads_ = new pbc::RepeatedField<global::SWGOH.Models.Protocols.CharSquad>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SWGOH.Models.Protocols.CharSquad> CharSquads {
      get { return charSquads_; }
    }

    /// <summary>Field number for the "fleet_squads" field.</summary>
    public const int FleetSquadsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::SWGOH.Models.Protocols.FleetSquad> _repeated_fleetSquads_codec
        = pb::FieldCodec.ForMessage(26, global::SWGOH.Models.Protocols.FleetSquad.Parser);
    private readonly pbc::RepeatedField<global::SWGOH.Models.Protocols.FleetSquad> fleetSquads_ = new pbc::RepeatedField<global::SWGOH.Models.Protocols.FleetSquad>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SWGOH.Models.Protocols.FleetSquad> FleetSquads {
      get { return fleetSquads_; }
    }

    /// <summary>Field number for the "materials" field.</summary>
    public const int MaterialsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::SWGOH.Models.Protocols.Material> _repeated_materials_codec
        = pb::FieldCodec.ForMessage(42, global::SWGOH.Models.Protocols.Material.Parser);
    private readonly pbc::RepeatedField<global::SWGOH.Models.Protocols.Material> materials_ = new pbc::RepeatedField<global::SWGOH.Models.Protocols.Material>();
    /// <summary>
    /// gear, mat, shard, mod, ability mat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SWGOH.Models.Protocols.Material> Materials {
      get { return materials_; }
    }

    /// <summary>Field number for the "stuff" field.</summary>
    public const int StuffFieldNumber = 9;
    private static readonly pb::FieldCodec<global::SWGOH.Models.Protocols.Stuff> _repeated_stuff_codec
        = pb::FieldCodec.ForMessage(74, global::SWGOH.Models.Protocols.Stuff.Parser);
    private readonly pbc::RepeatedField<global::SWGOH.Models.Protocols.Stuff> stuff_ = new pbc::RepeatedField<global::SWGOH.Models.Protocols.Stuff>();
    /// <summary>
    /// credits, crytals, GET 1, GET 2
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SWGOH.Models.Protocols.Stuff> Stuff {
      get { return stuff_; }
    }

    /// <summary>Field number for the "gear_salvage" field.</summary>
    public const int GearSalvageFieldNumber = 10;
    private static readonly pb::FieldCodec<global::SWGOH.Models.Protocols.GearSalvage> _repeated_gearSalvage_codec
        = pb::FieldCodec.ForMessage(82, global::SWGOH.Models.Protocols.GearSalvage.Parser);
    private readonly pbc::RepeatedField<global::SWGOH.Models.Protocols.GearSalvage> gearSalvage_ = new pbc::RepeatedField<global::SWGOH.Models.Protocols.GearSalvage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SWGOH.Models.Protocols.GearSalvage> GearSalvage {
      get { return gearSalvage_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerAdvancedInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerAdvancedInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!units_.Equals(other.units_)) return false;
      if(!charSquads_.Equals(other.charSquads_)) return false;
      if(!fleetSquads_.Equals(other.fleetSquads_)) return false;
      if(!materials_.Equals(other.materials_)) return false;
      if(!stuff_.Equals(other.stuff_)) return false;
      if(!gearSalvage_.Equals(other.gearSalvage_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= units_.GetHashCode();
      hash ^= charSquads_.GetHashCode();
      hash ^= fleetSquads_.GetHashCode();
      hash ^= materials_.GetHashCode();
      hash ^= stuff_.GetHashCode();
      hash ^= gearSalvage_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      units_.WriteTo(output, _repeated_units_codec);
      charSquads_.WriteTo(output, _repeated_charSquads_codec);
      fleetSquads_.WriteTo(output, _repeated_fleetSquads_codec);
      materials_.WriteTo(output, _repeated_materials_codec);
      stuff_.WriteTo(output, _repeated_stuff_codec);
      gearSalvage_.WriteTo(output, _repeated_gearSalvage_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      units_.WriteTo(ref output, _repeated_units_codec);
      charSquads_.WriteTo(ref output, _repeated_charSquads_codec);
      fleetSquads_.WriteTo(ref output, _repeated_fleetSquads_codec);
      materials_.WriteTo(ref output, _repeated_materials_codec);
      stuff_.WriteTo(ref output, _repeated_stuff_codec);
      gearSalvage_.WriteTo(ref output, _repeated_gearSalvage_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += units_.CalculateSize(_repeated_units_codec);
      size += charSquads_.CalculateSize(_repeated_charSquads_codec);
      size += fleetSquads_.CalculateSize(_repeated_fleetSquads_codec);
      size += materials_.CalculateSize(_repeated_materials_codec);
      size += stuff_.CalculateSize(_repeated_stuff_codec);
      size += gearSalvage_.CalculateSize(_repeated_gearSalvage_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerAdvancedInfo other) {
      if (other == null) {
        return;
      }
      units_.Add(other.units_);
      charSquads_.Add(other.charSquads_);
      fleetSquads_.Add(other.fleetSquads_);
      materials_.Add(other.materials_);
      stuff_.Add(other.stuff_);
      gearSalvage_.Add(other.gearSalvage_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            units_.AddEntriesFrom(input, _repeated_units_codec);
            break;
          }
          case 18: {
            charSquads_.AddEntriesFrom(input, _repeated_charSquads_codec);
            break;
          }
          case 26: {
            fleetSquads_.AddEntriesFrom(input, _repeated_fleetSquads_codec);
            break;
          }
          case 42: {
            materials_.AddEntriesFrom(input, _repeated_materials_codec);
            break;
          }
          case 74: {
            stuff_.AddEntriesFrom(input, _repeated_stuff_codec);
            break;
          }
          case 82: {
            gearSalvage_.AddEntriesFrom(input, _repeated_gearSalvage_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            units_.AddEntriesFrom(ref input, _repeated_units_codec);
            break;
          }
          case 18: {
            charSquads_.AddEntriesFrom(ref input, _repeated_charSquads_codec);
            break;
          }
          case 26: {
            fleetSquads_.AddEntriesFrom(ref input, _repeated_fleetSquads_codec);
            break;
          }
          case 42: {
            materials_.AddEntriesFrom(ref input, _repeated_materials_codec);
            break;
          }
          case 74: {
            stuff_.AddEntriesFrom(ref input, _repeated_stuff_codec);
            break;
          }
          case 82: {
            gearSalvage_.AddEntriesFrom(ref input, _repeated_gearSalvage_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Unit : pb::IMessage<Unit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Unit> _parser = new pb::MessageParser<Unit>(() => new Unit());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Unit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unit(Unit other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      name_ = other.name_;
      rarity_ = other.rarity_;
      level_ = other.level_;
      skill_ = other.skill_.Clone();
      gear_ = other.gear_;
      equipment_ = other.equipment_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Unit Clone() {
      return new Unit(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "rarity" field.</summary>
    public const int RarityFieldNumber = 8;
    private readonly static long RarityDefaultValue = 0L;

    private long rarity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Rarity {
      get { if ((_hasBits0 & 1) != 0) { return rarity_; } else { return RarityDefaultValue; } }
      set {
        _hasBits0 |= 1;
        rarity_ = value;
      }
    }
    /// <summary>Gets whether the "rarity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRarity {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "rarity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRarity() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 9;
    private readonly static long LevelDefaultValue = 0L;

    private long level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Level {
      get { if ((_hasBits0 & 2) != 0) { return level_; } else { return LevelDefaultValue; } }
      set {
        _hasBits0 |= 2;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLevel {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLevel() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "skill" field.</summary>
    public const int SkillFieldNumber = 16;
    private static readonly pb::FieldCodec<global::SWGOH.Models.Protocols.Skill> _repeated_skill_codec
        = pb::FieldCodec.ForMessage(130, global::SWGOH.Models.Protocols.Skill.Parser);
    private readonly pbc::RepeatedField<global::SWGOH.Models.Protocols.Skill> skill_ = new pbc::RepeatedField<global::SWGOH.Models.Protocols.Skill>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SWGOH.Models.Protocols.Skill> Skill {
      get { return skill_; }
    }

    /// <summary>Field number for the "gear" field.</summary>
    public const int GearFieldNumber = 19;
    private readonly static long GearDefaultValue = 0L;

    private long gear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Gear {
      get { if ((_hasBits0 & 4) != 0) { return gear_; } else { return GearDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gear_ = value;
      }
    }
    /// <summary>Gets whether the "gear" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGear {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gear" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGear() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "equipment" field.</summary>
    public const int EquipmentFieldNumber = 21;
    private static readonly pb::FieldCodec<global::SWGOH.Models.Protocols.Equipment> _repeated_equipment_codec
        = pb::FieldCodec.ForMessage(170, global::SWGOH.Models.Protocols.Equipment.Parser);
    private readonly pbc::RepeatedField<global::SWGOH.Models.Protocols.Equipment> equipment_ = new pbc::RepeatedField<global::SWGOH.Models.Protocols.Equipment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SWGOH.Models.Protocols.Equipment> Equipment {
      get { return equipment_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Unit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Unit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Rarity != other.Rarity) return false;
      if (Level != other.Level) return false;
      if(!skill_.Equals(other.skill_)) return false;
      if (Gear != other.Gear) return false;
      if(!equipment_.Equals(other.equipment_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasRarity) hash ^= Rarity.GetHashCode();
      if (HasLevel) hash ^= Level.GetHashCode();
      hash ^= skill_.GetHashCode();
      if (HasGear) hash ^= Gear.GetHashCode();
      hash ^= equipment_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasRarity) {
        output.WriteRawTag(64);
        output.WriteInt64(Rarity);
      }
      if (HasLevel) {
        output.WriteRawTag(72);
        output.WriteInt64(Level);
      }
      skill_.WriteTo(output, _repeated_skill_codec);
      if (HasGear) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(Gear);
      }
      equipment_.WriteTo(output, _repeated_equipment_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasRarity) {
        output.WriteRawTag(64);
        output.WriteInt64(Rarity);
      }
      if (HasLevel) {
        output.WriteRawTag(72);
        output.WriteInt64(Level);
      }
      skill_.WriteTo(ref output, _repeated_skill_codec);
      if (HasGear) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(Gear);
      }
      equipment_.WriteTo(ref output, _repeated_equipment_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasRarity) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Rarity);
      }
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Level);
      }
      size += skill_.CalculateSize(_repeated_skill_codec);
      if (HasGear) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Gear);
      }
      size += equipment_.CalculateSize(_repeated_equipment_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Unit other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasRarity) {
        Rarity = other.Rarity;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      skill_.Add(other.skill_);
      if (other.HasGear) {
        Gear = other.Gear;
      }
      equipment_.Add(other.equipment_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 64: {
            Rarity = input.ReadInt64();
            break;
          }
          case 72: {
            Level = input.ReadInt64();
            break;
          }
          case 130: {
            skill_.AddEntriesFrom(input, _repeated_skill_codec);
            break;
          }
          case 152: {
            Gear = input.ReadInt64();
            break;
          }
          case 170: {
            equipment_.AddEntriesFrom(input, _repeated_equipment_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 64: {
            Rarity = input.ReadInt64();
            break;
          }
          case 72: {
            Level = input.ReadInt64();
            break;
          }
          case 130: {
            skill_.AddEntriesFrom(ref input, _repeated_skill_codec);
            break;
          }
          case 152: {
            Gear = input.ReadInt64();
            break;
          }
          case 170: {
            equipment_.AddEntriesFrom(ref input, _repeated_equipment_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CharSquad : pb::IMessage<CharSquad>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CharSquad> _parser = new pb::MessageParser<CharSquad>(() => new CharSquad());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CharSquad> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharSquad() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharSquad(CharSquad other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CharSquad Clone() {
      return new CharSquad(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CharSquad);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CharSquad other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CharSquad other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class FleetSquad : pb::IMessage<FleetSquad>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FleetSquad> _parser = new pb::MessageParser<FleetSquad>(() => new FleetSquad());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FleetSquad> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FleetSquad() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FleetSquad(FleetSquad other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FleetSquad Clone() {
      return new FleetSquad(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FleetSquad);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FleetSquad other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FleetSquad other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class Material : pb::IMessage<Material>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Material> _parser = new pb::MessageParser<Material>(() => new Material());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Material> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Material() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Material(Material other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      quatity_ = other.quatity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Material Clone() {
      return new Material(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "quatity" field.</summary>
    public const int QuatityFieldNumber = 2;
    private readonly static long QuatityDefaultValue = 0L;

    private long quatity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Quatity {
      get { if ((_hasBits0 & 1) != 0) { return quatity_; } else { return QuatityDefaultValue; } }
      set {
        _hasBits0 |= 1;
        quatity_ = value;
      }
    }
    /// <summary>Gets whether the "quatity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuatity {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "quatity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuatity() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Material);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Material other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Quatity != other.Quatity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasQuatity) hash ^= Quatity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasQuatity) {
        output.WriteRawTag(16);
        output.WriteInt64(Quatity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasQuatity) {
        output.WriteRawTag(16);
        output.WriteInt64(Quatity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasQuatity) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quatity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Material other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasQuatity) {
        Quatity = other.Quatity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Quatity = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Quatity = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Stuff : pb::IMessage<Stuff>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Stuff> _parser = new pb::MessageParser<Stuff>(() => new Stuff());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Stuff> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stuff() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stuff(Stuff other) : this() {
      _hasBits0 = other._hasBits0;
      type_ = other.type_;
      quatity_ = other.quatity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stuff Clone() {
      return new Stuff(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private readonly static global::SWGOH.Models.Protocols.StuffType TypeDefaultValue = global::SWGOH.Models.Protocols.StuffType.Credits;

    private global::SWGOH.Models.Protocols.StuffType type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SWGOH.Models.Protocols.StuffType Type {
      get { if ((_hasBits0 & 1) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "quatity" field.</summary>
    public const int QuatityFieldNumber = 2;
    private readonly static long QuatityDefaultValue = 0L;

    private long quatity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Quatity {
      get { if ((_hasBits0 & 2) != 0) { return quatity_; } else { return QuatityDefaultValue; } }
      set {
        _hasBits0 |= 2;
        quatity_ = value;
      }
    }
    /// <summary>Gets whether the "quatity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuatity {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "quatity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuatity() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Stuff);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Stuff other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Quatity != other.Quatity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasType) hash ^= Type.GetHashCode();
      if (HasQuatity) hash ^= Quatity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasQuatity) {
        output.WriteRawTag(16);
        output.WriteInt64(Quatity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (HasQuatity) {
        output.WriteRawTag(16);
        output.WriteInt64(Quatity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasQuatity) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quatity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Stuff other) {
      if (other == null) {
        return;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasQuatity) {
        Quatity = other.Quatity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::SWGOH.Models.Protocols.StuffType) input.ReadEnum();
            break;
          }
          case 16: {
            Quatity = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::SWGOH.Models.Protocols.StuffType) input.ReadEnum();
            break;
          }
          case 16: {
            Quatity = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GearSalvage : pb::IMessage<GearSalvage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GearSalvage> _parser = new pb::MessageParser<GearSalvage>(() => new GearSalvage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GearSalvage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GearSalvage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GearSalvage(GearSalvage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GearSalvage Clone() {
      return new GearSalvage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GearSalvage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GearSalvage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GearSalvage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class Skill : pb::IMessage<Skill>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Skill> _parser = new pb::MessageParser<Skill>(() => new Skill());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Skill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill(Skill other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      level_ = other.level_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Skill Clone() {
      return new Skill(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 2;
    private readonly static long LevelDefaultValue = 0L;

    private long level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Level {
      get { if ((_hasBits0 & 1) != 0) { return level_; } else { return LevelDefaultValue; } }
      set {
        _hasBits0 |= 1;
        level_ = value;
      }
    }
    /// <summary>Gets whether the "level" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLevel {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "level" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLevel() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Skill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Skill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Level != other.Level) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasLevel) hash ^= Level.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasLevel) {
        output.WriteRawTag(16);
        output.WriteInt64(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasLevel) {
        output.WriteRawTag(16);
        output.WriteInt64(Level);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasLevel) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Level);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Skill other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasLevel) {
        Level = other.Level;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Level = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Level = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Equipment : pb::IMessage<Equipment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Equipment> _parser = new pb::MessageParser<Equipment>(() => new Equipment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Equipment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Equipment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Equipment(Equipment other) : this() {
      id_ = other.id_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Equipment Clone() {
      return new Equipment(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private readonly static string CodeDefaultValue = "";

    private string code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_ ?? CodeDefaultValue; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCode {
      get { return code_ != null; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCode() {
      code_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Equipment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Equipment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasCode) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasCode) {
        output.WriteRawTag(18);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Equipment other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Event : pb::IMessage<Event>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event(Event other) : this() {
      _hasBits0 = other._hasBits0;
      bundleId_ = other.bundleId_;
      season_ = other.season_;
      name_ = other.name_;
      summary_ = other.summary_;
      description_ = other.description_;
      icon_ = other.icon_;
      previewKey_ = other.previewKey_;
      time_ = other.time_ != null ? other.time_.Clone() : null;
      shipmentKey_ = other.shipmentKey_;
      eventIcon_ = other.eventIcon_;
      description2_ = other.description2_;
      limit_ = other.limit_;
      gcEventIcon_ = other.gcEventIcon_;
      gcMysteryBox_ = other.gcMysteryBox_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "bundle_id" field.</summary>
    public const int BundleIdFieldNumber = 1;
    private readonly static string BundleIdDefaultValue = "";

    private string bundleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BundleId {
      get { return bundleId_ ?? BundleIdDefaultValue; }
      set {
        bundleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bundle_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBundleId {
      get { return bundleId_ != null; }
    }
    /// <summary>Clears the value of the "bundle_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBundleId() {
      bundleId_ = null;
    }

    /// <summary>Field number for the "season" field.</summary>
    public const int SeasonFieldNumber = 2;
    private readonly static int SeasonDefaultValue = 0;

    private int season_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Season {
      get { if ((_hasBits0 & 1) != 0) { return season_; } else { return SeasonDefaultValue; } }
      set {
        _hasBits0 |= 1;
        season_ = value;
      }
    }
    /// <summary>Gets whether the "season" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSeason {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "season" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSeason() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "summary" field.</summary>
    public const int SummaryFieldNumber = 4;
    private readonly static string SummaryDefaultValue = "";

    private string summary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Summary {
      get { return summary_ ?? SummaryDefaultValue; }
      set {
        summary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "summary" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSummary {
      get { return summary_ != null; }
    }
    /// <summary>Clears the value of the "summary" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSummary() {
      summary_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 6;
    private readonly static string IconDefaultValue = "";

    private string icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_ ?? IconDefaultValue; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIcon {
      get { return icon_ != null; }
    }
    /// <summary>Clears the value of the "icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIcon() {
      icon_ = null;
    }

    /// <summary>Field number for the "preview_key" field.</summary>
    public const int PreviewKeyFieldNumber = 7;
    private readonly static int PreviewKeyDefaultValue = 0;

    private int previewKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PreviewKey {
      get { if ((_hasBits0 & 2) != 0) { return previewKey_; } else { return PreviewKeyDefaultValue; } }
      set {
        _hasBits0 |= 2;
        previewKey_ = value;
      }
    }
    /// <summary>Gets whether the "preview_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPreviewKey {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "preview_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPreviewKey() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 10;
    private global::SWGOH.Models.Protocols.EventTime time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SWGOH.Models.Protocols.EventTime Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "shipment_key" field.</summary>
    public const int ShipmentKeyFieldNumber = 15;
    private readonly static string ShipmentKeyDefaultValue = "";

    private string shipmentKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShipmentKey {
      get { return shipmentKey_ ?? ShipmentKeyDefaultValue; }
      set {
        shipmentKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "shipment_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasShipmentKey {
      get { return shipmentKey_ != null; }
    }
    /// <summary>Clears the value of the "shipment_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearShipmentKey() {
      shipmentKey_ = null;
    }

    /// <summary>Field number for the "event_icon" field.</summary>
    public const int EventIconFieldNumber = 18;
    private readonly static string EventIconDefaultValue = "";

    private string eventIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EventIcon {
      get { return eventIcon_ ?? EventIconDefaultValue; }
      set {
        eventIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "event_icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEventIcon {
      get { return eventIcon_ != null; }
    }
    /// <summary>Clears the value of the "event_icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEventIcon() {
      eventIcon_ = null;
    }

    /// <summary>Field number for the "description2" field.</summary>
    public const int Description2FieldNumber = 25;
    private readonly static string Description2DefaultValue = "";

    private string description2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description2 {
      get { return description2_ ?? Description2DefaultValue; }
      set {
        description2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription2 {
      get { return description2_ != null; }
    }
    /// <summary>Clears the value of the "description2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription2() {
      description2_ = null;
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 32;
    private readonly static string LimitDefaultValue = "";

    private string limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Limit {
      get { return limit_ ?? LimitDefaultValue; }
      set {
        limit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLimit {
      get { return limit_ != null; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLimit() {
      limit_ = null;
    }

    /// <summary>Field number for the "gc_event_icon" field.</summary>
    public const int GcEventIconFieldNumber = 35;
    private readonly static string GcEventIconDefaultValue = "";

    private string gcEventIcon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GcEventIcon {
      get { return gcEventIcon_ ?? GcEventIconDefaultValue; }
      set {
        gcEventIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gc_event_icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGcEventIcon {
      get { return gcEventIcon_ != null; }
    }
    /// <summary>Clears the value of the "gc_event_icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGcEventIcon() {
      gcEventIcon_ = null;
    }

    /// <summary>Field number for the "gc_mystery_box" field.</summary>
    public const int GcMysteryBoxFieldNumber = 38;
    private static readonly pb::FieldCodec<global::SWGOH.Models.Protocols.GalacticChallengeMysteryBox> _repeated_gcMysteryBox_codec
        = pb::FieldCodec.ForMessage(306, global::SWGOH.Models.Protocols.GalacticChallengeMysteryBox.Parser);
    private readonly pbc::RepeatedField<global::SWGOH.Models.Protocols.GalacticChallengeMysteryBox> gcMysteryBox_ = new pbc::RepeatedField<global::SWGOH.Models.Protocols.GalacticChallengeMysteryBox>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SWGOH.Models.Protocols.GalacticChallengeMysteryBox> GcMysteryBox {
      get { return gcMysteryBox_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BundleId != other.BundleId) return false;
      if (Season != other.Season) return false;
      if (Name != other.Name) return false;
      if (Summary != other.Summary) return false;
      if (Description != other.Description) return false;
      if (Icon != other.Icon) return false;
      if (PreviewKey != other.PreviewKey) return false;
      if (!object.Equals(Time, other.Time)) return false;
      if (ShipmentKey != other.ShipmentKey) return false;
      if (EventIcon != other.EventIcon) return false;
      if (Description2 != other.Description2) return false;
      if (Limit != other.Limit) return false;
      if (GcEventIcon != other.GcEventIcon) return false;
      if(!gcMysteryBox_.Equals(other.gcMysteryBox_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBundleId) hash ^= BundleId.GetHashCode();
      if (HasSeason) hash ^= Season.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasSummary) hash ^= Summary.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasIcon) hash ^= Icon.GetHashCode();
      if (HasPreviewKey) hash ^= PreviewKey.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (HasShipmentKey) hash ^= ShipmentKey.GetHashCode();
      if (HasEventIcon) hash ^= EventIcon.GetHashCode();
      if (HasDescription2) hash ^= Description2.GetHashCode();
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (HasGcEventIcon) hash ^= GcEventIcon.GetHashCode();
      hash ^= gcMysteryBox_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBundleId) {
        output.WriteRawTag(10);
        output.WriteString(BundleId);
      }
      if (HasSeason) {
        output.WriteRawTag(16);
        output.WriteInt32(Season);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasSummary) {
        output.WriteRawTag(34);
        output.WriteString(Summary);
      }
      if (HasDescription) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (HasIcon) {
        output.WriteRawTag(50);
        output.WriteString(Icon);
      }
      if (HasPreviewKey) {
        output.WriteRawTag(56);
        output.WriteInt32(PreviewKey);
      }
      if (time_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Time);
      }
      if (HasShipmentKey) {
        output.WriteRawTag(122);
        output.WriteString(ShipmentKey);
      }
      if (HasEventIcon) {
        output.WriteRawTag(146, 1);
        output.WriteString(EventIcon);
      }
      if (HasDescription2) {
        output.WriteRawTag(202, 1);
        output.WriteString(Description2);
      }
      if (HasLimit) {
        output.WriteRawTag(130, 2);
        output.WriteString(Limit);
      }
      if (HasGcEventIcon) {
        output.WriteRawTag(154, 2);
        output.WriteString(GcEventIcon);
      }
      gcMysteryBox_.WriteTo(output, _repeated_gcMysteryBox_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBundleId) {
        output.WriteRawTag(10);
        output.WriteString(BundleId);
      }
      if (HasSeason) {
        output.WriteRawTag(16);
        output.WriteInt32(Season);
      }
      if (HasName) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (HasSummary) {
        output.WriteRawTag(34);
        output.WriteString(Summary);
      }
      if (HasDescription) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (HasIcon) {
        output.WriteRawTag(50);
        output.WriteString(Icon);
      }
      if (HasPreviewKey) {
        output.WriteRawTag(56);
        output.WriteInt32(PreviewKey);
      }
      if (time_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Time);
      }
      if (HasShipmentKey) {
        output.WriteRawTag(122);
        output.WriteString(ShipmentKey);
      }
      if (HasEventIcon) {
        output.WriteRawTag(146, 1);
        output.WriteString(EventIcon);
      }
      if (HasDescription2) {
        output.WriteRawTag(202, 1);
        output.WriteString(Description2);
      }
      if (HasLimit) {
        output.WriteRawTag(130, 2);
        output.WriteString(Limit);
      }
      if (HasGcEventIcon) {
        output.WriteRawTag(154, 2);
        output.WriteString(GcEventIcon);
      }
      gcMysteryBox_.WriteTo(ref output, _repeated_gcMysteryBox_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasBundleId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BundleId);
      }
      if (HasSeason) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Season);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasSummary) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Summary);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (HasPreviewKey) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PreviewKey);
      }
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (HasShipmentKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShipmentKey);
      }
      if (HasEventIcon) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(EventIcon);
      }
      if (HasDescription2) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Description2);
      }
      if (HasLimit) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Limit);
      }
      if (HasGcEventIcon) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(GcEventIcon);
      }
      size += gcMysteryBox_.CalculateSize(_repeated_gcMysteryBox_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      if (other.HasBundleId) {
        BundleId = other.BundleId;
      }
      if (other.HasSeason) {
        Season = other.Season;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasSummary) {
        Summary = other.Summary;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasIcon) {
        Icon = other.Icon;
      }
      if (other.HasPreviewKey) {
        PreviewKey = other.PreviewKey;
      }
      if (other.time_ != null) {
        if (time_ == null) {
          Time = new global::SWGOH.Models.Protocols.EventTime();
        }
        Time.MergeFrom(other.Time);
      }
      if (other.HasShipmentKey) {
        ShipmentKey = other.ShipmentKey;
      }
      if (other.HasEventIcon) {
        EventIcon = other.EventIcon;
      }
      if (other.HasDescription2) {
        Description2 = other.Description2;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      if (other.HasGcEventIcon) {
        GcEventIcon = other.GcEventIcon;
      }
      gcMysteryBox_.Add(other.gcMysteryBox_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BundleId = input.ReadString();
            break;
          }
          case 16: {
            Season = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Summary = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            Icon = input.ReadString();
            break;
          }
          case 56: {
            PreviewKey = input.ReadInt32();
            break;
          }
          case 82: {
            if (time_ == null) {
              Time = new global::SWGOH.Models.Protocols.EventTime();
            }
            input.ReadMessage(Time);
            break;
          }
          case 122: {
            ShipmentKey = input.ReadString();
            break;
          }
          case 146: {
            EventIcon = input.ReadString();
            break;
          }
          case 202: {
            Description2 = input.ReadString();
            break;
          }
          case 258: {
            Limit = input.ReadString();
            break;
          }
          case 282: {
            GcEventIcon = input.ReadString();
            break;
          }
          case 306: {
            gcMysteryBox_.AddEntriesFrom(input, _repeated_gcMysteryBox_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BundleId = input.ReadString();
            break;
          }
          case 16: {
            Season = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Summary = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            Icon = input.ReadString();
            break;
          }
          case 56: {
            PreviewKey = input.ReadInt32();
            break;
          }
          case 82: {
            if (time_ == null) {
              Time = new global::SWGOH.Models.Protocols.EventTime();
            }
            input.ReadMessage(Time);
            break;
          }
          case 122: {
            ShipmentKey = input.ReadString();
            break;
          }
          case 146: {
            EventIcon = input.ReadString();
            break;
          }
          case 202: {
            Description2 = input.ReadString();
            break;
          }
          case 258: {
            Limit = input.ReadString();
            break;
          }
          case 282: {
            GcEventIcon = input.ReadString();
            break;
          }
          case 306: {
            gcMysteryBox_.AddEntriesFrom(ref input, _repeated_gcMysteryBox_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventTime : pb::IMessage<EventTime>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventTime> _parser = new pb::MessageParser<EventTime>(() => new EventTime());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventTime> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventTime() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventTime(EventTime other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      selectTime_ = other.selectTime_;
      endTime2_ = other.endTime2_;
      status_ = other.status_;
      endTime3_ = other.endTime3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventTime Clone() {
      return new EventTime(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private readonly static long StartTimeDefaultValue = 0L;

    private long startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTime {
      get { if ((_hasBits0 & 1) != 0) { return startTime_; } else { return StartTimeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        startTime_ = value;
      }
    }
    /// <summary>Gets whether the "start_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStartTime {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "start_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStartTime() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 3;
    private readonly static long EndTimeDefaultValue = 0L;

    private long endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndTime {
      get { if ((_hasBits0 & 2) != 0) { return endTime_; } else { return EndTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        endTime_ = value;
      }
    }
    /// <summary>Gets whether the "end_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEndTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "end_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEndTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "select_time" field.</summary>
    public const int SelectTimeFieldNumber = 4;
    private readonly static long SelectTimeDefaultValue = 0L;

    private long selectTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SelectTime {
      get { if ((_hasBits0 & 4) != 0) { return selectTime_; } else { return SelectTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        selectTime_ = value;
      }
    }
    /// <summary>Gets whether the "select_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSelectTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "select_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSelectTime() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "end_time2" field.</summary>
    public const int EndTime2FieldNumber = 5;
    private readonly static long EndTime2DefaultValue = 0L;

    private long endTime2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndTime2 {
      get { if ((_hasBits0 & 8) != 0) { return endTime2_; } else { return EndTime2DefaultValue; } }
      set {
        _hasBits0 |= 8;
        endTime2_ = value;
      }
    }
    /// <summary>Gets whether the "end_time2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEndTime2 {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "end_time2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEndTime2() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 6;
    private readonly static int StatusDefaultValue = 0;

    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { if ((_hasBits0 & 16) != 0) { return status_; } else { return StatusDefaultValue; } }
      set {
        _hasBits0 |= 16;
        status_ = value;
      }
    }
    /// <summary>Gets whether the "status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStatus {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatus() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "end_time3" field.</summary>
    public const int EndTime3FieldNumber = 16;
    private readonly static long EndTime3DefaultValue = 0L;

    private long endTime3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndTime3 {
      get { if ((_hasBits0 & 32) != 0) { return endTime3_; } else { return EndTime3DefaultValue; } }
      set {
        _hasBits0 |= 32;
        endTime3_ = value;
      }
    }
    /// <summary>Gets whether the "end_time3" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEndTime3 {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "end_time3" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEndTime3() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventTime);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventTime other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (SelectTime != other.SelectTime) return false;
      if (EndTime2 != other.EndTime2) return false;
      if (Status != other.Status) return false;
      if (EndTime3 != other.EndTime3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasStartTime) hash ^= StartTime.GetHashCode();
      if (HasEndTime) hash ^= EndTime.GetHashCode();
      if (HasSelectTime) hash ^= SelectTime.GetHashCode();
      if (HasEndTime2) hash ^= EndTime2.GetHashCode();
      if (HasStatus) hash ^= Status.GetHashCode();
      if (HasEndTime3) hash ^= EndTime3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasStartTime) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(24);
        output.WriteInt64(EndTime);
      }
      if (HasSelectTime) {
        output.WriteRawTag(32);
        output.WriteInt64(SelectTime);
      }
      if (HasEndTime2) {
        output.WriteRawTag(40);
        output.WriteInt64(EndTime2);
      }
      if (HasStatus) {
        output.WriteRawTag(48);
        output.WriteInt32(Status);
      }
      if (HasEndTime3) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(EndTime3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasStartTime) {
        output.WriteRawTag(16);
        output.WriteInt64(StartTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(24);
        output.WriteInt64(EndTime);
      }
      if (HasSelectTime) {
        output.WriteRawTag(32);
        output.WriteInt64(SelectTime);
      }
      if (HasEndTime2) {
        output.WriteRawTag(40);
        output.WriteInt64(EndTime2);
      }
      if (HasStatus) {
        output.WriteRawTag(48);
        output.WriteInt32(Status);
      }
      if (HasEndTime3) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(EndTime3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasStartTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (HasEndTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (HasSelectTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SelectTime);
      }
      if (HasEndTime2) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime2);
      }
      if (HasStatus) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (HasEndTime3) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(EndTime3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventTime other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasStartTime) {
        StartTime = other.StartTime;
      }
      if (other.HasEndTime) {
        EndTime = other.EndTime;
      }
      if (other.HasSelectTime) {
        SelectTime = other.SelectTime;
      }
      if (other.HasEndTime2) {
        EndTime2 = other.EndTime2;
      }
      if (other.HasStatus) {
        Status = other.Status;
      }
      if (other.HasEndTime3) {
        EndTime3 = other.EndTime3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            StartTime = input.ReadInt64();
            break;
          }
          case 24: {
            EndTime = input.ReadInt64();
            break;
          }
          case 32: {
            SelectTime = input.ReadInt64();
            break;
          }
          case 40: {
            EndTime2 = input.ReadInt64();
            break;
          }
          case 48: {
            Status = input.ReadInt32();
            break;
          }
          case 128: {
            EndTime3 = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            StartTime = input.ReadInt64();
            break;
          }
          case 24: {
            EndTime = input.ReadInt64();
            break;
          }
          case 32: {
            SelectTime = input.ReadInt64();
            break;
          }
          case 40: {
            EndTime2 = input.ReadInt64();
            break;
          }
          case 48: {
            Status = input.ReadInt32();
            break;
          }
          case 128: {
            EndTime3 = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GalacticChallengeMysteryBox : pb::IMessage<GalacticChallengeMysteryBox>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GalacticChallengeMysteryBox> _parser = new pb::MessageParser<GalacticChallengeMysteryBox>(() => new GalacticChallengeMysteryBox());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GalacticChallengeMysteryBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalacticChallengeMysteryBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalacticChallengeMysteryBox(GalacticChallengeMysteryBox other) : this() {
      _hasBits0 = other._hasBits0;
      minPoints_ = other.minPoints_;
      maxPoints_ = other.maxPoints_;
      reward_ = other.reward_ != null ? other.reward_.Clone() : null;
      nextReward_ = other.nextReward_ != null ? other.nextReward_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalacticChallengeMysteryBox Clone() {
      return new GalacticChallengeMysteryBox(this);
    }

    /// <summary>Field number for the "min_points" field.</summary>
    public const int MinPointsFieldNumber = 1;
    private readonly static long MinPointsDefaultValue = 0L;

    private long minPoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MinPoints {
      get { if ((_hasBits0 & 1) != 0) { return minPoints_; } else { return MinPointsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        minPoints_ = value;
      }
    }
    /// <summary>Gets whether the "min_points" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMinPoints {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "min_points" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMinPoints() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "max_points" field.</summary>
    public const int MaxPointsFieldNumber = 2;
    private readonly static long MaxPointsDefaultValue = 0L;

    private long maxPoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxPoints {
      get { if ((_hasBits0 & 2) != 0) { return maxPoints_; } else { return MaxPointsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        maxPoints_ = value;
      }
    }
    /// <summary>Gets whether the "max_points" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaxPoints {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "max_points" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaxPoints() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "reward" field.</summary>
    public const int RewardFieldNumber = 3;
    private global::SWGOH.Models.Protocols.GalacticChallengeMysteryBoxReward reward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SWGOH.Models.Protocols.GalacticChallengeMysteryBoxReward Reward {
      get { return reward_; }
      set {
        reward_ = value;
      }
    }

    /// <summary>Field number for the "next_reward" field.</summary>
    public const int NextRewardFieldNumber = 4;
    private global::SWGOH.Models.Protocols.GalacticChallengeMysteryBoxReward nextReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SWGOH.Models.Protocols.GalacticChallengeMysteryBoxReward NextReward {
      get { return nextReward_; }
      set {
        nextReward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GalacticChallengeMysteryBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GalacticChallengeMysteryBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MinPoints != other.MinPoints) return false;
      if (MaxPoints != other.MaxPoints) return false;
      if (!object.Equals(Reward, other.Reward)) return false;
      if (!object.Equals(NextReward, other.NextReward)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMinPoints) hash ^= MinPoints.GetHashCode();
      if (HasMaxPoints) hash ^= MaxPoints.GetHashCode();
      if (reward_ != null) hash ^= Reward.GetHashCode();
      if (nextReward_ != null) hash ^= NextReward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMinPoints) {
        output.WriteRawTag(8);
        output.WriteInt64(MinPoints);
      }
      if (HasMaxPoints) {
        output.WriteRawTag(16);
        output.WriteInt64(MaxPoints);
      }
      if (reward_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Reward);
      }
      if (nextReward_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NextReward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMinPoints) {
        output.WriteRawTag(8);
        output.WriteInt64(MinPoints);
      }
      if (HasMaxPoints) {
        output.WriteRawTag(16);
        output.WriteInt64(MaxPoints);
      }
      if (reward_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Reward);
      }
      if (nextReward_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NextReward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMinPoints) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinPoints);
      }
      if (HasMaxPoints) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxPoints);
      }
      if (reward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reward);
      }
      if (nextReward_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NextReward);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GalacticChallengeMysteryBox other) {
      if (other == null) {
        return;
      }
      if (other.HasMinPoints) {
        MinPoints = other.MinPoints;
      }
      if (other.HasMaxPoints) {
        MaxPoints = other.MaxPoints;
      }
      if (other.reward_ != null) {
        if (reward_ == null) {
          Reward = new global::SWGOH.Models.Protocols.GalacticChallengeMysteryBoxReward();
        }
        Reward.MergeFrom(other.Reward);
      }
      if (other.nextReward_ != null) {
        if (nextReward_ == null) {
          NextReward = new global::SWGOH.Models.Protocols.GalacticChallengeMysteryBoxReward();
        }
        NextReward.MergeFrom(other.NextReward);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MinPoints = input.ReadInt64();
            break;
          }
          case 16: {
            MaxPoints = input.ReadInt64();
            break;
          }
          case 26: {
            if (reward_ == null) {
              Reward = new global::SWGOH.Models.Protocols.GalacticChallengeMysteryBoxReward();
            }
            input.ReadMessage(Reward);
            break;
          }
          case 34: {
            if (nextReward_ == null) {
              NextReward = new global::SWGOH.Models.Protocols.GalacticChallengeMysteryBoxReward();
            }
            input.ReadMessage(NextReward);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MinPoints = input.ReadInt64();
            break;
          }
          case 16: {
            MaxPoints = input.ReadInt64();
            break;
          }
          case 26: {
            if (reward_ == null) {
              Reward = new global::SWGOH.Models.Protocols.GalacticChallengeMysteryBoxReward();
            }
            input.ReadMessage(Reward);
            break;
          }
          case 34: {
            if (nextReward_ == null) {
              NextReward = new global::SWGOH.Models.Protocols.GalacticChallengeMysteryBoxReward();
            }
            input.ReadMessage(NextReward);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GalacticChallengeMysteryBoxReward : pb::IMessage<GalacticChallengeMysteryBoxReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GalacticChallengeMysteryBoxReward> _parser = new pb::MessageParser<GalacticChallengeMysteryBoxReward>(() => new GalacticChallengeMysteryBoxReward());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GalacticChallengeMysteryBoxReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalacticChallengeMysteryBoxReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalacticChallengeMysteryBoxReward(GalacticChallengeMysteryBoxReward other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      requiredPoints_ = other.requiredPoints_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GalacticChallengeMysteryBoxReward Clone() {
      return new GalacticChallengeMysteryBoxReward(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "required_points" field.</summary>
    public const int RequiredPointsFieldNumber = 2;
    private readonly static long RequiredPointsDefaultValue = 0L;

    private long requiredPoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RequiredPoints {
      get { if ((_hasBits0 & 1) != 0) { return requiredPoints_; } else { return RequiredPointsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        requiredPoints_ = value;
      }
    }
    /// <summary>Gets whether the "required_points" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRequiredPoints {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "required_points" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequiredPoints() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GalacticChallengeMysteryBoxReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GalacticChallengeMysteryBoxReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (RequiredPoints != other.RequiredPoints) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasRequiredPoints) hash ^= RequiredPoints.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasRequiredPoints) {
        output.WriteRawTag(16);
        output.WriteInt64(RequiredPoints);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasRequiredPoints) {
        output.WriteRawTag(16);
        output.WriteInt64(RequiredPoints);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasRequiredPoints) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RequiredPoints);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GalacticChallengeMysteryBoxReward other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasRequiredPoints) {
        RequiredPoints = other.RequiredPoints;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            RequiredPoints = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            RequiredPoints = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Message : pb::IMessage<Message>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      _hasBits0 = other._hasBits0;
      bundleId_ = other.bundleId_;
      season_ = other.season_;
      titleKey_ = other.titleKey_;
      descriptionKey_ = other.descriptionKey_;
      icon_ = other.icon_;
      channel_ = other.channel_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "bundle_id" field.</summary>
    public const int BundleIdFieldNumber = 1;
    private readonly static string BundleIdDefaultValue = "";

    private string bundleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BundleId {
      get { return bundleId_ ?? BundleIdDefaultValue; }
      set {
        bundleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bundle_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBundleId {
      get { return bundleId_ != null; }
    }
    /// <summary>Clears the value of the "bundle_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBundleId() {
      bundleId_ = null;
    }

    /// <summary>Field number for the "season" field.</summary>
    public const int SeasonFieldNumber = 2;
    private readonly static int SeasonDefaultValue = 0;

    private int season_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Season {
      get { if ((_hasBits0 & 1) != 0) { return season_; } else { return SeasonDefaultValue; } }
      set {
        _hasBits0 |= 1;
        season_ = value;
      }
    }
    /// <summary>Gets whether the "season" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSeason {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "season" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSeason() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "title_key" field.</summary>
    public const int TitleKeyFieldNumber = 3;
    private readonly static string TitleKeyDefaultValue = "";

    private string titleKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TitleKey {
      get { return titleKey_ ?? TitleKeyDefaultValue; }
      set {
        titleKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitleKey {
      get { return titleKey_ != null; }
    }
    /// <summary>Clears the value of the "title_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitleKey() {
      titleKey_ = null;
    }

    /// <summary>Field number for the "description_key" field.</summary>
    public const int DescriptionKeyFieldNumber = 4;
    private readonly static string DescriptionKeyDefaultValue = "";

    private string descriptionKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DescriptionKey {
      get { return descriptionKey_ ?? DescriptionKeyDefaultValue; }
      set {
        descriptionKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description_key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescriptionKey {
      get { return descriptionKey_ != null; }
    }
    /// <summary>Clears the value of the "description_key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescriptionKey() {
      descriptionKey_ = null;
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 5;
    private readonly static string IconDefaultValue = "";

    private string icon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_ ?? IconDefaultValue; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "icon" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasIcon {
      get { return icon_ != null; }
    }
    /// <summary>Clears the value of the "icon" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIcon() {
      icon_ = null;
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 6;
    private readonly static string ChannelDefaultValue = "";

    private string channel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_ ?? ChannelDefaultValue; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "channel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasChannel {
      get { return channel_ != null; }
    }
    /// <summary>Clears the value of the "channel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearChannel() {
      channel_ = null;
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 7;
    private readonly static long StartTimeDefaultValue = 0L;

    private long startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTime {
      get { if ((_hasBits0 & 2) != 0) { return startTime_; } else { return StartTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        startTime_ = value;
      }
    }
    /// <summary>Gets whether the "start_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStartTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "start_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStartTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 8;
    private readonly static long EndTimeDefaultValue = 0L;

    private long endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndTime {
      get { if ((_hasBits0 & 4) != 0) { return endTime_; } else { return EndTimeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        endTime_ = value;
      }
    }
    /// <summary>Gets whether the "end_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasEndTime {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "end_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearEndTime() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BundleId != other.BundleId) return false;
      if (Season != other.Season) return false;
      if (TitleKey != other.TitleKey) return false;
      if (DescriptionKey != other.DescriptionKey) return false;
      if (Icon != other.Icon) return false;
      if (Channel != other.Channel) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBundleId) hash ^= BundleId.GetHashCode();
      if (HasSeason) hash ^= Season.GetHashCode();
      if (HasTitleKey) hash ^= TitleKey.GetHashCode();
      if (HasDescriptionKey) hash ^= DescriptionKey.GetHashCode();
      if (HasIcon) hash ^= Icon.GetHashCode();
      if (HasChannel) hash ^= Channel.GetHashCode();
      if (HasStartTime) hash ^= StartTime.GetHashCode();
      if (HasEndTime) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBundleId) {
        output.WriteRawTag(10);
        output.WriteString(BundleId);
      }
      if (HasSeason) {
        output.WriteRawTag(16);
        output.WriteInt32(Season);
      }
      if (HasTitleKey) {
        output.WriteRawTag(26);
        output.WriteString(TitleKey);
      }
      if (HasDescriptionKey) {
        output.WriteRawTag(34);
        output.WriteString(DescriptionKey);
      }
      if (HasIcon) {
        output.WriteRawTag(42);
        output.WriteString(Icon);
      }
      if (HasChannel) {
        output.WriteRawTag(50);
        output.WriteString(Channel);
      }
      if (HasStartTime) {
        output.WriteRawTag(56);
        output.WriteInt64(StartTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(64);
        output.WriteInt64(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBundleId) {
        output.WriteRawTag(10);
        output.WriteString(BundleId);
      }
      if (HasSeason) {
        output.WriteRawTag(16);
        output.WriteInt32(Season);
      }
      if (HasTitleKey) {
        output.WriteRawTag(26);
        output.WriteString(TitleKey);
      }
      if (HasDescriptionKey) {
        output.WriteRawTag(34);
        output.WriteString(DescriptionKey);
      }
      if (HasIcon) {
        output.WriteRawTag(42);
        output.WriteString(Icon);
      }
      if (HasChannel) {
        output.WriteRawTag(50);
        output.WriteString(Channel);
      }
      if (HasStartTime) {
        output.WriteRawTag(56);
        output.WriteInt64(StartTime);
      }
      if (HasEndTime) {
        output.WriteRawTag(64);
        output.WriteInt64(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasBundleId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BundleId);
      }
      if (HasSeason) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Season);
      }
      if (HasTitleKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitleKey);
      }
      if (HasDescriptionKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DescriptionKey);
      }
      if (HasIcon) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (HasChannel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (HasStartTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (HasEndTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.HasBundleId) {
        BundleId = other.BundleId;
      }
      if (other.HasSeason) {
        Season = other.Season;
      }
      if (other.HasTitleKey) {
        TitleKey = other.TitleKey;
      }
      if (other.HasDescriptionKey) {
        DescriptionKey = other.DescriptionKey;
      }
      if (other.HasIcon) {
        Icon = other.Icon;
      }
      if (other.HasChannel) {
        Channel = other.Channel;
      }
      if (other.HasStartTime) {
        StartTime = other.StartTime;
      }
      if (other.HasEndTime) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BundleId = input.ReadString();
            break;
          }
          case 16: {
            Season = input.ReadInt32();
            break;
          }
          case 26: {
            TitleKey = input.ReadString();
            break;
          }
          case 34: {
            DescriptionKey = input.ReadString();
            break;
          }
          case 42: {
            Icon = input.ReadString();
            break;
          }
          case 50: {
            Channel = input.ReadString();
            break;
          }
          case 56: {
            StartTime = input.ReadInt64();
            break;
          }
          case 64: {
            EndTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BundleId = input.ReadString();
            break;
          }
          case 16: {
            Season = input.ReadInt32();
            break;
          }
          case 26: {
            TitleKey = input.ReadString();
            break;
          }
          case 34: {
            DescriptionKey = input.ReadString();
            break;
          }
          case 42: {
            Icon = input.ReadString();
            break;
          }
          case 50: {
            Channel = input.ReadString();
            break;
          }
          case 56: {
            StartTime = input.ReadInt64();
            break;
          }
          case 64: {
            EndTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Dialog : pb::IMessage<Dialog>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Dialog> _parser = new pb::MessageParser<Dialog>(() => new Dialog());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dialog> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dialog() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dialog(Dialog other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dialog Clone() {
      return new Dialog(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dialog);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dialog other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dialog other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class BundlePack : pb::IMessage<BundlePack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BundlePack> _parser = new pb::MessageParser<BundlePack>(() => new BundlePack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BundlePack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BundlePack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BundlePack(BundlePack other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BundlePack Clone() {
      return new BundlePack(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BundlePack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BundlePack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BundlePack other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class MiscPack : pb::IMessage<MiscPack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MiscPack> _parser = new pb::MessageParser<MiscPack>(() => new MiscPack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MiscPack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiscPack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiscPack(MiscPack other) : this() {
      item_ = other.item_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiscPack Clone() {
      return new MiscPack(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private static readonly pb::FieldCodec<global::SWGOH.Models.Protocols.MiscPackItem> _repeated_item_codec
        = pb::FieldCodec.ForMessage(10, global::SWGOH.Models.Protocols.MiscPackItem.Parser);
    private readonly pbc::RepeatedField<global::SWGOH.Models.Protocols.MiscPackItem> item_ = new pbc::RepeatedField<global::SWGOH.Models.Protocols.MiscPackItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::SWGOH.Models.Protocols.MiscPackItem> Item {
      get { return item_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MiscPack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MiscPack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!item_.Equals(other.item_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= item_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      item_.WriteTo(output, _repeated_item_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      item_.WriteTo(ref output, _repeated_item_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += item_.CalculateSize(_repeated_item_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MiscPack other) {
      if (other == null) {
        return;
      }
      item_.Add(other.item_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            item_.AddEntriesFrom(input, _repeated_item_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            item_.AddEntriesFrom(ref input, _repeated_item_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MiscPackItem : pb::IMessage<MiscPackItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MiscPackItem> _parser = new pb::MessageParser<MiscPackItem>(() => new MiscPackItem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MiscPackItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiscPackItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiscPackItem(MiscPackItem other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      quatity_ = other.quatity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiscPackItem Clone() {
      return new MiscPackItem(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "quatity" field.</summary>
    public const int QuatityFieldNumber = 2;
    private readonly static long QuatityDefaultValue = 0L;

    private long quatity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Quatity {
      get { if ((_hasBits0 & 1) != 0) { return quatity_; } else { return QuatityDefaultValue; } }
      set {
        _hasBits0 |= 1;
        quatity_ = value;
      }
    }
    /// <summary>Gets whether the "quatity" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasQuatity {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "quatity" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearQuatity() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MiscPackItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MiscPackItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Quatity != other.Quatity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasQuatity) hash ^= Quatity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasQuatity) {
        output.WriteRawTag(16);
        output.WriteInt64(Quatity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasQuatity) {
        output.WriteRawTag(16);
        output.WriteInt64(Quatity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasQuatity) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quatity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MiscPackItem other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasQuatity) {
        Quatity = other.Quatity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Quatity = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Quatity = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DailyLogin : pb::IMessage<DailyLogin>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DailyLogin> _parser = new pb::MessageParser<DailyLogin>(() => new DailyLogin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DailyLogin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyLogin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyLogin(DailyLogin other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DailyLogin Clone() {
      return new DailyLogin(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DailyLogin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DailyLogin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DailyLogin other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerStats : pb::IMessage<PlayerStats>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerStats> _parser = new pb::MessageParser<PlayerStats>(() => new PlayerStats());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerStats> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStats() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStats(PlayerStats other) : this() {
      _hasBits0 = other._hasBits0;
      title_ = other.title_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStats Clone() {
      return new PlayerStats(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private readonly static string TitleDefaultValue = "";

    private string title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_ ?? TitleDefaultValue; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "title" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTitle {
      get { return title_ != null; }
    }
    /// <summary>Clears the value of the "title" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTitle() {
      title_ = null;
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private readonly static long CountDefaultValue = 0L;

    private long count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Count {
      get { if ((_hasBits0 & 1) != 0) { return count_; } else { return CountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        count_ = value;
      }
    }
    /// <summary>Gets whether the "count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCount() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerStats);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerStats other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTitle) hash ^= Title.GetHashCode();
      if (HasCount) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTitle) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (HasCount) {
        output.WriteRawTag(16);
        output.WriteInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTitle) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (HasCount) {
        output.WriteRawTag(16);
        output.WriteInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTitle) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HasCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerStats other) {
      if (other == null) {
        return;
      }
      if (other.HasTitle) {
        Title = other.Title;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 16: {
            Count = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 16: {
            Count = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Friend : pb::IMessage<Friend>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Friend> _parser = new pb::MessageParser<Friend>(() => new Friend());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Friend> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Friend() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Friend(Friend other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Friend Clone() {
      return new Friend(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Friend);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Friend other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Friend other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class Guild : pb::IMessage<Guild>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Guild> _parser = new pb::MessageParser<Guild>(() => new Guild());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Guild> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Guild() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Guild(Guild other) : this() {
      profile_ = other.profile_ != null ? other.profile_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Guild Clone() {
      return new Guild(this);
    }

    /// <summary>Field number for the "profile" field.</summary>
    public const int ProfileFieldNumber = 1;
    private global::SWGOH.Models.Protocols.GuildProfile profile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SWGOH.Models.Protocols.GuildProfile Profile {
      get { return profile_; }
      set {
        profile_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Guild);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Guild other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Profile, other.Profile)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (profile_ != null) hash ^= Profile.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (profile_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Profile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (profile_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Profile);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (profile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Profile);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Guild other) {
      if (other == null) {
        return;
      }
      if (other.profile_ != null) {
        if (profile_ == null) {
          Profile = new global::SWGOH.Models.Protocols.GuildProfile();
        }
        Profile.MergeFrom(other.Profile);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (profile_ == null) {
              Profile = new global::SWGOH.Models.Protocols.GuildProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (profile_ == null) {
              Profile = new global::SWGOH.Models.Protocols.GuildProfile();
            }
            input.ReadMessage(Profile);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GuildProfile : pb::IMessage<GuildProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuildProfile> _parser = new pb::MessageParser<GuildProfile>(() => new GuildProfile());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GuildProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.PlayerRpcGetInitialDataResponseReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuildProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuildProfile(GuildProfile other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      name_ = other.name_;
      description_ = other.description_;
      memberCap_ = other.memberCap_;
      member_ = other.member_;
      gp_ = other.gp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuildProfile Clone() {
      return new GuildProfile(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static string IdDefaultValue = "";

    private string id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_ ?? IdDefaultValue; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasId {
      get { return id_ != null; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      id_ = null;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private readonly static string NameDefaultValue = "";

    private string name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private readonly static string DescriptionDefaultValue = "";

    private string description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_ ?? DescriptionDefaultValue; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "description" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDescription {
      get { return description_ != null; }
    }
    /// <summary>Clears the value of the "description" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDescription() {
      description_ = null;
    }

    /// <summary>Field number for the "member_cap" field.</summary>
    public const int MemberCapFieldNumber = 9;
    private readonly static long MemberCapDefaultValue = 0L;

    private long memberCap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MemberCap {
      get { if ((_hasBits0 & 1) != 0) { return memberCap_; } else { return MemberCapDefaultValue; } }
      set {
        _hasBits0 |= 1;
        memberCap_ = value;
      }
    }
    /// <summary>Gets whether the "member_cap" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMemberCap {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "member_cap" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMemberCap() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "member" field.</summary>
    public const int MemberFieldNumber = 10;
    private readonly static long MemberDefaultValue = 0L;

    private long member_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Member {
      get { if ((_hasBits0 & 2) != 0) { return member_; } else { return MemberDefaultValue; } }
      set {
        _hasBits0 |= 2;
        member_ = value;
      }
    }
    /// <summary>Gets whether the "member" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMember {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "member" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMember() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "gp" field.</summary>
    public const int GpFieldNumber = 19;
    private readonly static long GpDefaultValue = 0L;

    private long gp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Gp {
      get { if ((_hasBits0 & 4) != 0) { return gp_; } else { return GpDefaultValue; } }
      set {
        _hasBits0 |= 4;
        gp_ = value;
      }
    }
    /// <summary>Gets whether the "gp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGp {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "gp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGp() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GuildProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GuildProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (MemberCap != other.MemberCap) return false;
      if (Member != other.Member) return false;
      if (Gp != other.Gp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (HasName) hash ^= Name.GetHashCode();
      if (HasDescription) hash ^= Description.GetHashCode();
      if (HasMemberCap) hash ^= MemberCap.GetHashCode();
      if (HasMember) hash ^= Member.GetHashCode();
      if (HasGp) hash ^= Gp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (HasMemberCap) {
        output.WriteRawTag(72);
        output.WriteInt64(MemberCap);
      }
      if (HasMember) {
        output.WriteRawTag(80);
        output.WriteInt64(Member);
      }
      if (HasGp) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(Gp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (HasName) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (HasDescription) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (HasMemberCap) {
        output.WriteRawTag(72);
        output.WriteInt64(MemberCap);
      }
      if (HasMember) {
        output.WriteRawTag(80);
        output.WriteInt64(Member);
      }
      if (HasGp) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(Gp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasDescription) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasMemberCap) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MemberCap);
      }
      if (HasMember) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Member);
      }
      if (HasGp) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Gp);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GuildProfile other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      if (other.HasMemberCap) {
        MemberCap = other.MemberCap;
      }
      if (other.HasMember) {
        Member = other.Member;
      }
      if (other.HasGp) {
        Gp = other.Gp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 72: {
            MemberCap = input.ReadInt64();
            break;
          }
          case 80: {
            Member = input.ReadInt64();
            break;
          }
          case 152: {
            Gp = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 72: {
            MemberCap = input.ReadInt64();
            break;
          }
          case 80: {
            Member = input.ReadInt64();
            break;
          }
          case 152: {
            Gp = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
