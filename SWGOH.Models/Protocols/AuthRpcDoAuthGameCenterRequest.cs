// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: authrpc/doauthgamecenter/AuthRpcDoAuthGameCenterRequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SWGOH.Models.Protocols {

  /// <summary>Holder for reflection information generated from authrpc/doauthgamecenter/AuthRpcDoAuthGameCenterRequest.proto</summary>
  public static partial class AuthRpcDoAuthGameCenterRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for authrpc/doauthgamecenter/AuthRpcDoAuthGameCenterRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthRpcDoAuthGameCenterRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj1hdXRocnBjL2RvYXV0aGdhbWVjZW50ZXIvQXV0aFJwY0RvQXV0aEdhbWVD",
            "ZW50ZXJSZXF1ZXN0LnByb3RvEhZTV0dPSC5Nb2RlbHMuUHJvdG9jb2xzIq0B",
            "Ch5BdXRoUnBjRG9BdXRoR2FtZUNlbnRlclJlcXVlc3QSFQoNZ2FtZWNlbnRl",
            "cl9pZBgBIAEoCRIXCg9kZXZpY2VfcGxhdGZvcm0YAiABKAkSEQoJYmluZGxl",
            "X2lkGAUgASgJEhAKCGd1ZXN0X2lkGAcgASgJEg4KBnJlZ2lvbhgIIAEoCRIm",
            "Ch5sb2NhbF90aW1lX3pvbmVfb2Zmc2V0X21pbnV0ZXMYCiABKAM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.AuthRpcDoAuthGameCenterRequest), global::SWGOH.Models.Protocols.AuthRpcDoAuthGameCenterRequest.Parser, new[]{ "GamecenterId", "DevicePlatform", "BindleId", "GuestId", "Region", "LocalTimeZoneOffsetMinutes" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AuthRpcDoAuthGameCenterRequest : pb::IMessage<AuthRpcDoAuthGameCenterRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthRpcDoAuthGameCenterRequest> _parser = new pb::MessageParser<AuthRpcDoAuthGameCenterRequest>(() => new AuthRpcDoAuthGameCenterRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthRpcDoAuthGameCenterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.AuthRpcDoAuthGameCenterRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthRpcDoAuthGameCenterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthRpcDoAuthGameCenterRequest(AuthRpcDoAuthGameCenterRequest other) : this() {
      _hasBits0 = other._hasBits0;
      gamecenterId_ = other.gamecenterId_;
      devicePlatform_ = other.devicePlatform_;
      bindleId_ = other.bindleId_;
      guestId_ = other.guestId_;
      region_ = other.region_;
      localTimeZoneOffsetMinutes_ = other.localTimeZoneOffsetMinutes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthRpcDoAuthGameCenterRequest Clone() {
      return new AuthRpcDoAuthGameCenterRequest(this);
    }

    /// <summary>Field number for the "gamecenter_id" field.</summary>
    public const int GamecenterIdFieldNumber = 1;
    private readonly static string GamecenterIdDefaultValue = "";

    private string gamecenterId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GamecenterId {
      get { return gamecenterId_ ?? GamecenterIdDefaultValue; }
      set {
        gamecenterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "gamecenter_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGamecenterId {
      get { return gamecenterId_ != null; }
    }
    /// <summary>Clears the value of the "gamecenter_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGamecenterId() {
      gamecenterId_ = null;
    }

    /// <summary>Field number for the "device_platform" field.</summary>
    public const int DevicePlatformFieldNumber = 2;
    private readonly static string DevicePlatformDefaultValue = "";

    private string devicePlatform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DevicePlatform {
      get { return devicePlatform_ ?? DevicePlatformDefaultValue; }
      set {
        devicePlatform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "device_platform" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDevicePlatform {
      get { return devicePlatform_ != null; }
    }
    /// <summary>Clears the value of the "device_platform" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDevicePlatform() {
      devicePlatform_ = null;
    }

    /// <summary>Field number for the "bindle_id" field.</summary>
    public const int BindleIdFieldNumber = 5;
    private readonly static string BindleIdDefaultValue = "";

    private string bindleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BindleId {
      get { return bindleId_ ?? BindleIdDefaultValue; }
      set {
        bindleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "bindle_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasBindleId {
      get { return bindleId_ != null; }
    }
    /// <summary>Clears the value of the "bindle_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBindleId() {
      bindleId_ = null;
    }

    /// <summary>Field number for the "guest_id" field.</summary>
    public const int GuestIdFieldNumber = 7;
    private readonly static string GuestIdDefaultValue = "";

    private string guestId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GuestId {
      get { return guestId_ ?? GuestIdDefaultValue; }
      set {
        guestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "guest_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasGuestId {
      get { return guestId_ != null; }
    }
    /// <summary>Clears the value of the "guest_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGuestId() {
      guestId_ = null;
    }

    /// <summary>Field number for the "region" field.</summary>
    public const int RegionFieldNumber = 8;
    private readonly static string RegionDefaultValue = "";

    private string region_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Region {
      get { return region_ ?? RegionDefaultValue; }
      set {
        region_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "region" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasRegion {
      get { return region_ != null; }
    }
    /// <summary>Clears the value of the "region" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRegion() {
      region_ = null;
    }

    /// <summary>Field number for the "local_time_zone_offset_minutes" field.</summary>
    public const int LocalTimeZoneOffsetMinutesFieldNumber = 10;
    private readonly static long LocalTimeZoneOffsetMinutesDefaultValue = 0L;

    private long localTimeZoneOffsetMinutes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LocalTimeZoneOffsetMinutes {
      get { if ((_hasBits0 & 1) != 0) { return localTimeZoneOffsetMinutes_; } else { return LocalTimeZoneOffsetMinutesDefaultValue; } }
      set {
        _hasBits0 |= 1;
        localTimeZoneOffsetMinutes_ = value;
      }
    }
    /// <summary>Gets whether the "local_time_zone_offset_minutes" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasLocalTimeZoneOffsetMinutes {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "local_time_zone_offset_minutes" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearLocalTimeZoneOffsetMinutes() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthRpcDoAuthGameCenterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthRpcDoAuthGameCenterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GamecenterId != other.GamecenterId) return false;
      if (DevicePlatform != other.DevicePlatform) return false;
      if (BindleId != other.BindleId) return false;
      if (GuestId != other.GuestId) return false;
      if (Region != other.Region) return false;
      if (LocalTimeZoneOffsetMinutes != other.LocalTimeZoneOffsetMinutes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasGamecenterId) hash ^= GamecenterId.GetHashCode();
      if (HasDevicePlatform) hash ^= DevicePlatform.GetHashCode();
      if (HasBindleId) hash ^= BindleId.GetHashCode();
      if (HasGuestId) hash ^= GuestId.GetHashCode();
      if (HasRegion) hash ^= Region.GetHashCode();
      if (HasLocalTimeZoneOffsetMinutes) hash ^= LocalTimeZoneOffsetMinutes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasGamecenterId) {
        output.WriteRawTag(10);
        output.WriteString(GamecenterId);
      }
      if (HasDevicePlatform) {
        output.WriteRawTag(18);
        output.WriteString(DevicePlatform);
      }
      if (HasBindleId) {
        output.WriteRawTag(42);
        output.WriteString(BindleId);
      }
      if (HasGuestId) {
        output.WriteRawTag(58);
        output.WriteString(GuestId);
      }
      if (HasRegion) {
        output.WriteRawTag(66);
        output.WriteString(Region);
      }
      if (HasLocalTimeZoneOffsetMinutes) {
        output.WriteRawTag(80);
        output.WriteInt64(LocalTimeZoneOffsetMinutes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasGamecenterId) {
        output.WriteRawTag(10);
        output.WriteString(GamecenterId);
      }
      if (HasDevicePlatform) {
        output.WriteRawTag(18);
        output.WriteString(DevicePlatform);
      }
      if (HasBindleId) {
        output.WriteRawTag(42);
        output.WriteString(BindleId);
      }
      if (HasGuestId) {
        output.WriteRawTag(58);
        output.WriteString(GuestId);
      }
      if (HasRegion) {
        output.WriteRawTag(66);
        output.WriteString(Region);
      }
      if (HasLocalTimeZoneOffsetMinutes) {
        output.WriteRawTag(80);
        output.WriteInt64(LocalTimeZoneOffsetMinutes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasGamecenterId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GamecenterId);
      }
      if (HasDevicePlatform) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DevicePlatform);
      }
      if (HasBindleId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BindleId);
      }
      if (HasGuestId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GuestId);
      }
      if (HasRegion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Region);
      }
      if (HasLocalTimeZoneOffsetMinutes) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LocalTimeZoneOffsetMinutes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthRpcDoAuthGameCenterRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasGamecenterId) {
        GamecenterId = other.GamecenterId;
      }
      if (other.HasDevicePlatform) {
        DevicePlatform = other.DevicePlatform;
      }
      if (other.HasBindleId) {
        BindleId = other.BindleId;
      }
      if (other.HasGuestId) {
        GuestId = other.GuestId;
      }
      if (other.HasRegion) {
        Region = other.Region;
      }
      if (other.HasLocalTimeZoneOffsetMinutes) {
        LocalTimeZoneOffsetMinutes = other.LocalTimeZoneOffsetMinutes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GamecenterId = input.ReadString();
            break;
          }
          case 18: {
            DevicePlatform = input.ReadString();
            break;
          }
          case 42: {
            BindleId = input.ReadString();
            break;
          }
          case 58: {
            GuestId = input.ReadString();
            break;
          }
          case 66: {
            Region = input.ReadString();
            break;
          }
          case 80: {
            LocalTimeZoneOffsetMinutes = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GamecenterId = input.ReadString();
            break;
          }
          case 18: {
            DevicePlatform = input.ReadString();
            break;
          }
          case 42: {
            BindleId = input.ReadString();
            break;
          }
          case 58: {
            GuestId = input.ReadString();
            break;
          }
          case 66: {
            Region = input.ReadString();
            break;
          }
          case 80: {
            LocalTimeZoneOffsetMinutes = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
