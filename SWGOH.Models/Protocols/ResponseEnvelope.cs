// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ResponseEnvelope.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace SWGOH.Models.Protocols {

  /// <summary>Holder for reflection information generated from ResponseEnvelope.proto</summary>
  public static partial class ResponseEnvelopeReflection {

    #region Descriptor
    /// <summary>File descriptor for ResponseEnvelope.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResponseEnvelopeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZSZXNwb25zZUVudmVsb3BlLnByb3RvEhZTV0dPSC5Nb2RlbHMuUHJvdG9j",
            "b2xzGhVDb250ZW50RW5jb2RpbmcucHJvdG8aElJlc3BvbnNlQ29kZS5wcm90",
            "byLRAgoQUmVzcG9uc2VFbnZlbG9wZRIWCg5jb3JyZWxhdGlvbl9pZBgBIAEo",
            "AxIbChNjdXJyZW50X3NlcnZlcl90aW1lGAIgASgDEg8KB3BheWxvYWQYBCAB",
            "KAwSMgoEY29kZRgFIAEoDjIkLlNXR09ILk1vZGVscy5Qcm90b2NvbHMuUmVz",
            "cG9uc2VDb2RlEg8KB21lc3NhZ2UYBiABKAkSQQoQY29udGVudF9lbmNvZGlu",
            "ZxgHIAEoDjInLlNXR09ILk1vZGVscy5Qcm90b2NvbHMuQ29udGVudEVuY29k",
            "aW5nEhMKC3N0YWNrX3RyYWNlGAggASgJEhsKE21haW50ZW5hbmNlX21lc3Nh",
            "Z2UYCiABKAkSGAoQbWFpbnRlbmFuY2VfbGluaxgLIAEoCRIQCghzdWJfY29k",
            "ZRgMIAEoAxIRCglzdWJfY29kZTIYDSABKAM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::SWGOH.Models.Protocols.ContentEncodingReflection.Descriptor, global::SWGOH.Models.Protocols.ResponseCodeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::SWGOH.Models.Protocols.ResponseEnvelope), global::SWGOH.Models.Protocols.ResponseEnvelope.Parser, new[]{ "CorrelationId", "CurrentServerTime", "Payload", "Code", "Message", "ContentEncoding", "StackTrace", "MaintenanceMessage", "MaintenanceLink", "SubCode", "SubCode2" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ResponseEnvelope : pb::IMessage<ResponseEnvelope>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResponseEnvelope> _parser = new pb::MessageParser<ResponseEnvelope>(() => new ResponseEnvelope());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseEnvelope> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::SWGOH.Models.Protocols.ResponseEnvelopeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseEnvelope() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseEnvelope(ResponseEnvelope other) : this() {
      _hasBits0 = other._hasBits0;
      correlationId_ = other.correlationId_;
      currentServerTime_ = other.currentServerTime_;
      payload_ = other.payload_;
      code_ = other.code_;
      message_ = other.message_;
      contentEncoding_ = other.contentEncoding_;
      stackTrace_ = other.stackTrace_;
      maintenanceMessage_ = other.maintenanceMessage_;
      maintenanceLink_ = other.maintenanceLink_;
      subCode_ = other.subCode_;
      subCode2_ = other.subCode2_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseEnvelope Clone() {
      return new ResponseEnvelope(this);
    }

    /// <summary>Field number for the "correlation_id" field.</summary>
    public const int CorrelationIdFieldNumber = 1;
    private readonly static long CorrelationIdDefaultValue = 0L;

    private long correlationId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CorrelationId {
      get { if ((_hasBits0 & 1) != 0) { return correlationId_; } else { return CorrelationIdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        correlationId_ = value;
      }
    }
    /// <summary>Gets whether the "correlation_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCorrelationId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "correlation_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCorrelationId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "current_server_time" field.</summary>
    public const int CurrentServerTimeFieldNumber = 2;
    private readonly static long CurrentServerTimeDefaultValue = 0L;

    private long currentServerTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CurrentServerTime {
      get { if ((_hasBits0 & 2) != 0) { return currentServerTime_; } else { return CurrentServerTimeDefaultValue; } }
      set {
        _hasBits0 |= 2;
        currentServerTime_ = value;
      }
    }
    /// <summary>Gets whether the "current_server_time" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCurrentServerTime {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "current_server_time" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCurrentServerTime() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 4;
    private readonly static pb::ByteString PayloadDefaultValue = pb::ByteString.Empty;

    private pb::ByteString payload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_ ?? PayloadDefaultValue; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "payload" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPayload {
      get { return payload_ != null; }
    }
    /// <summary>Clears the value of the "payload" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payload_ = null;
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 5;
    private readonly static global::SWGOH.Models.Protocols.ResponseCode CodeDefaultValue = global::SWGOH.Models.Protocols.ResponseCode.None;

    private global::SWGOH.Models.Protocols.ResponseCode code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SWGOH.Models.Protocols.ResponseCode Code {
      get { if ((_hasBits0 & 4) != 0) { return code_; } else { return CodeDefaultValue; } }
      set {
        _hasBits0 |= 4;
        code_ = value;
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasCode {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearCode() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 6;
    private readonly static string MessageDefaultValue = "";

    private string message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_ ?? MessageDefaultValue; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMessage {
      get { return message_ != null; }
    }
    /// <summary>Clears the value of the "message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      message_ = null;
    }

    /// <summary>Field number for the "content_encoding" field.</summary>
    public const int ContentEncodingFieldNumber = 7;
    private readonly static global::SWGOH.Models.Protocols.ContentEncoding ContentEncodingDefaultValue = global::SWGOH.Models.Protocols.ContentEncoding.Defaultcontentencoding;

    private global::SWGOH.Models.Protocols.ContentEncoding contentEncoding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::SWGOH.Models.Protocols.ContentEncoding ContentEncoding {
      get { if ((_hasBits0 & 8) != 0) { return contentEncoding_; } else { return ContentEncodingDefaultValue; } }
      set {
        _hasBits0 |= 8;
        contentEncoding_ = value;
      }
    }
    /// <summary>Gets whether the "content_encoding" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContentEncoding {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "content_encoding" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContentEncoding() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "stack_trace" field.</summary>
    public const int StackTraceFieldNumber = 8;
    private readonly static string StackTraceDefaultValue = "";

    private string stackTrace_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StackTrace {
      get { return stackTrace_ ?? StackTraceDefaultValue; }
      set {
        stackTrace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "stack_trace" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStackTrace {
      get { return stackTrace_ != null; }
    }
    /// <summary>Clears the value of the "stack_trace" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStackTrace() {
      stackTrace_ = null;
    }

    /// <summary>Field number for the "maintenance_message" field.</summary>
    public const int MaintenanceMessageFieldNumber = 10;
    private readonly static string MaintenanceMessageDefaultValue = "";

    private string maintenanceMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaintenanceMessage {
      get { return maintenanceMessage_ ?? MaintenanceMessageDefaultValue; }
      set {
        maintenanceMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "maintenance_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaintenanceMessage {
      get { return maintenanceMessage_ != null; }
    }
    /// <summary>Clears the value of the "maintenance_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaintenanceMessage() {
      maintenanceMessage_ = null;
    }

    /// <summary>Field number for the "maintenance_link" field.</summary>
    public const int MaintenanceLinkFieldNumber = 11;
    private readonly static string MaintenanceLinkDefaultValue = "";

    private string maintenanceLink_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MaintenanceLink {
      get { return maintenanceLink_ ?? MaintenanceLinkDefaultValue; }
      set {
        maintenanceLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "maintenance_link" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMaintenanceLink {
      get { return maintenanceLink_ != null; }
    }
    /// <summary>Clears the value of the "maintenance_link" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMaintenanceLink() {
      maintenanceLink_ = null;
    }

    /// <summary>Field number for the "sub_code" field.</summary>
    public const int SubCodeFieldNumber = 12;
    private readonly static long SubCodeDefaultValue = 0L;

    private long subCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SubCode {
      get { if ((_hasBits0 & 16) != 0) { return subCode_; } else { return SubCodeDefaultValue; } }
      set {
        _hasBits0 |= 16;
        subCode_ = value;
      }
    }
    /// <summary>Gets whether the "sub_code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubCode {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "sub_code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubCode() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "sub_code2" field.</summary>
    public const int SubCode2FieldNumber = 13;
    private readonly static long SubCode2DefaultValue = 0L;

    private long subCode2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SubCode2 {
      get { if ((_hasBits0 & 32) != 0) { return subCode2_; } else { return SubCode2DefaultValue; } }
      set {
        _hasBits0 |= 32;
        subCode2_ = value;
      }
    }
    /// <summary>Gets whether the "sub_code2" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasSubCode2 {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "sub_code2" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubCode2() {
      _hasBits0 &= ~32;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseEnvelope);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseEnvelope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CorrelationId != other.CorrelationId) return false;
      if (CurrentServerTime != other.CurrentServerTime) return false;
      if (Payload != other.Payload) return false;
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      if (ContentEncoding != other.ContentEncoding) return false;
      if (StackTrace != other.StackTrace) return false;
      if (MaintenanceMessage != other.MaintenanceMessage) return false;
      if (MaintenanceLink != other.MaintenanceLink) return false;
      if (SubCode != other.SubCode) return false;
      if (SubCode2 != other.SubCode2) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCorrelationId) hash ^= CorrelationId.GetHashCode();
      if (HasCurrentServerTime) hash ^= CurrentServerTime.GetHashCode();
      if (HasPayload) hash ^= Payload.GetHashCode();
      if (HasCode) hash ^= Code.GetHashCode();
      if (HasMessage) hash ^= Message.GetHashCode();
      if (HasContentEncoding) hash ^= ContentEncoding.GetHashCode();
      if (HasStackTrace) hash ^= StackTrace.GetHashCode();
      if (HasMaintenanceMessage) hash ^= MaintenanceMessage.GetHashCode();
      if (HasMaintenanceLink) hash ^= MaintenanceLink.GetHashCode();
      if (HasSubCode) hash ^= SubCode.GetHashCode();
      if (HasSubCode2) hash ^= SubCode2.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCorrelationId) {
        output.WriteRawTag(8);
        output.WriteInt64(CorrelationId);
      }
      if (HasCurrentServerTime) {
        output.WriteRawTag(16);
        output.WriteInt64(CurrentServerTime);
      }
      if (HasPayload) {
        output.WriteRawTag(34);
        output.WriteBytes(Payload);
      }
      if (HasCode) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Code);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (HasContentEncoding) {
        output.WriteRawTag(56);
        output.WriteEnum((int) ContentEncoding);
      }
      if (HasStackTrace) {
        output.WriteRawTag(66);
        output.WriteString(StackTrace);
      }
      if (HasMaintenanceMessage) {
        output.WriteRawTag(82);
        output.WriteString(MaintenanceMessage);
      }
      if (HasMaintenanceLink) {
        output.WriteRawTag(90);
        output.WriteString(MaintenanceLink);
      }
      if (HasSubCode) {
        output.WriteRawTag(96);
        output.WriteInt64(SubCode);
      }
      if (HasSubCode2) {
        output.WriteRawTag(104);
        output.WriteInt64(SubCode2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCorrelationId) {
        output.WriteRawTag(8);
        output.WriteInt64(CorrelationId);
      }
      if (HasCurrentServerTime) {
        output.WriteRawTag(16);
        output.WriteInt64(CurrentServerTime);
      }
      if (HasPayload) {
        output.WriteRawTag(34);
        output.WriteBytes(Payload);
      }
      if (HasCode) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Code);
      }
      if (HasMessage) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (HasContentEncoding) {
        output.WriteRawTag(56);
        output.WriteEnum((int) ContentEncoding);
      }
      if (HasStackTrace) {
        output.WriteRawTag(66);
        output.WriteString(StackTrace);
      }
      if (HasMaintenanceMessage) {
        output.WriteRawTag(82);
        output.WriteString(MaintenanceMessage);
      }
      if (HasMaintenanceLink) {
        output.WriteRawTag(90);
        output.WriteString(MaintenanceLink);
      }
      if (HasSubCode) {
        output.WriteRawTag(96);
        output.WriteInt64(SubCode);
      }
      if (HasSubCode2) {
        output.WriteRawTag(104);
        output.WriteInt64(SubCode2);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasCorrelationId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CorrelationId);
      }
      if (HasCurrentServerTime) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentServerTime);
      }
      if (HasPayload) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (HasMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (HasContentEncoding) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContentEncoding);
      }
      if (HasStackTrace) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StackTrace);
      }
      if (HasMaintenanceMessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaintenanceMessage);
      }
      if (HasMaintenanceLink) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MaintenanceLink);
      }
      if (HasSubCode) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SubCode);
      }
      if (HasSubCode2) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SubCode2);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseEnvelope other) {
      if (other == null) {
        return;
      }
      if (other.HasCorrelationId) {
        CorrelationId = other.CorrelationId;
      }
      if (other.HasCurrentServerTime) {
        CurrentServerTime = other.CurrentServerTime;
      }
      if (other.HasPayload) {
        Payload = other.Payload;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      if (other.HasMessage) {
        Message = other.Message;
      }
      if (other.HasContentEncoding) {
        ContentEncoding = other.ContentEncoding;
      }
      if (other.HasStackTrace) {
        StackTrace = other.StackTrace;
      }
      if (other.HasMaintenanceMessage) {
        MaintenanceMessage = other.MaintenanceMessage;
      }
      if (other.HasMaintenanceLink) {
        MaintenanceLink = other.MaintenanceLink;
      }
      if (other.HasSubCode) {
        SubCode = other.SubCode;
      }
      if (other.HasSubCode2) {
        SubCode2 = other.SubCode2;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CorrelationId = input.ReadInt64();
            break;
          }
          case 16: {
            CurrentServerTime = input.ReadInt64();
            break;
          }
          case 34: {
            Payload = input.ReadBytes();
            break;
          }
          case 40: {
            Code = (global::SWGOH.Models.Protocols.ResponseCode) input.ReadEnum();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
          case 56: {
            ContentEncoding = (global::SWGOH.Models.Protocols.ContentEncoding) input.ReadEnum();
            break;
          }
          case 66: {
            StackTrace = input.ReadString();
            break;
          }
          case 82: {
            MaintenanceMessage = input.ReadString();
            break;
          }
          case 90: {
            MaintenanceLink = input.ReadString();
            break;
          }
          case 96: {
            SubCode = input.ReadInt64();
            break;
          }
          case 104: {
            SubCode2 = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CorrelationId = input.ReadInt64();
            break;
          }
          case 16: {
            CurrentServerTime = input.ReadInt64();
            break;
          }
          case 34: {
            Payload = input.ReadBytes();
            break;
          }
          case 40: {
            Code = (global::SWGOH.Models.Protocols.ResponseCode) input.ReadEnum();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
          case 56: {
            ContentEncoding = (global::SWGOH.Models.Protocols.ContentEncoding) input.ReadEnum();
            break;
          }
          case 66: {
            StackTrace = input.ReadString();
            break;
          }
          case 82: {
            MaintenanceMessage = input.ReadString();
            break;
          }
          case 90: {
            MaintenanceLink = input.ReadString();
            break;
          }
          case 96: {
            SubCode = input.ReadInt64();
            break;
          }
          case 104: {
            SubCode2 = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
